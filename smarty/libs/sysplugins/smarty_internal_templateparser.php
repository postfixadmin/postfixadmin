<?php

class TP_yyStackEntry
{
    public $stateno;       /* The state-number */
    public $major;         /* The major token value.  This is the code
                     ** number for the token at this stack level */
    public $minor; /* The user-supplied minor token value.  This
                     ** is the value of the token  */
}

;
#line 11 "../smarty/lexer/smarty_internal_templateparser.y"

/**
 * Smarty Template Parser Class
 *
 * This is the template parser.
 * It is generated from the smarty_internal_templateparser.y file
 *
 * @author Uwe Tews <uwe.tews@googlemail.com>
 */
class Smarty_Internal_Templateparser
{
    #line 23 "../smarty/lexer/smarty_internal_templateparser.y"
    const Err1 = 'Security error: Call to private object member not allowed';
    const Err2 = 'Security error: Call to dynamic object member not allowed';
    const Err3 = 'PHP in template not allowed. Use SmartyBC to enable it';
    const TP_VERT                   = 1;
    const TP_COLON                  = 2;
    const TP_UNIMATH                = 3;
    const TP_PHP                    = 4;
    const TP_TEXT                   = 5;
    const TP_STRIPON                = 6;
    const TP_STRIPOFF               = 7;
    const TP_LITERALSTART           = 8;
    const TP_LITERALEND             = 9;
    const TP_LITERAL                = 10;
    const TP_SIMPELOUTPUT           = 11;
    const TP_SIMPLETAG              = 12;
    const TP_SMARTYBLOCKCHILDPARENT = 13;
    const TP_LDEL                   = 14;
    const TP_RDEL                   = 15;
    const TP_DOLLARID               = 16;
    const TP_EQUAL                  = 17;
    const TP_ID                     = 18;
    const TP_PTR                    = 19;
    const TP_LDELMAKENOCACHE        = 20;
    const TP_LDELIF                 = 21;
    const TP_LDELFOR                = 22;
    const TP_SEMICOLON              = 23;
    const TP_INCDEC                 = 24;
    const TP_TO                     = 25;
    const TP_STEP                   = 26;
    const TP_LDELFOREACH            = 27;
    const TP_SPACE                  = 28;
    const TP_AS                     = 29;
    const TP_APTR                   = 30;
    const TP_LDELSETFILTER          = 31;
    const TP_CLOSETAG               = 32;
    const TP_LDELSLASH              = 33;
    const TP_ATTR                   = 34;
    const TP_INTEGER                = 35;
    const TP_COMMA                  = 36;
    const TP_OPENP                  = 37;
    const TP_CLOSEP                 = 38;
    const TP_MATH                   = 39;
    const TP_ISIN                   = 40;
    const TP_QMARK                  = 41;
    const TP_NOT                    = 42;
    const TP_TYPECAST               = 43;
    const TP_HEX                    = 44;
    const TP_DOT                    = 45;
    const TP_INSTANCEOF             = 46;
    const TP_SINGLEQUOTESTRING      = 47;
    const TP_DOUBLECOLON            = 48;
    const TP_NAMESPACE              = 49;
    const TP_AT                     = 50;
    const TP_HATCH                  = 51;
    const TP_OPENB                  = 52;
    const TP_CLOSEB                 = 53;
    const TP_DOLLAR                 = 54;
    const TP_LOGOP                  = 55;
    const TP_SLOGOP                 = 56;
    const TP_TLOGOP                 = 57;
    const TP_SINGLECOND             = 58;
    const TP_QUOTE                  = 59;
    const TP_BACKTICK               = 60;
    const YY_NO_ACTION              = 511;
    const YY_ACCEPT_ACTION          = 510;
    const YY_ERROR_ACTION           = 509;
    const YY_SZ_ACTTAB = 2178;
    const YY_SHIFT_USE_DFLT = -23;
    const YY_SHIFT_MAX      = 227;
    const YY_REDUCE_USE_DFLT = -68;
    const YY_REDUCE_MAX      = 176;
    const YYNOCODE      = 108;
    const YYSTACKDEPTH  = 500;
    const YYNSTATE      = 323;
    const YYNRULE       = 186;
    const YYERRORSYMBOL = 61;
    const YYERRSYMDT    = 'yy0';
    const YYFALLBACK    = 0;
    /**
     * result status
     *
     * @var bool
     */
    public $successful = true;
    /**
     * return value
     *
     * @var mixed
     */
    public $retvalue = 0;
    /**
     * @var
     */
    public $yymajor;
    /**
     * last index of array variable
     *
     * @var mixed
     */
    public $last_index;
    /**
     * last variable name
     *
     * @var string
     */
    public $last_variable;
    /**
     * root parse tree buffer
     *
     * @var Smarty_Internal_ParseTree
     */
    public $root_buffer;
    /**
     * current parse tree object
     *
     * @var Smarty_Internal_ParseTree
     */
    public $current_buffer;
    /**
     * lexer object
     *
     * @var Smarty_Internal_Templatelexer
     */
    public $lex;
    /**
     * internal error flag
     *
     * @var bool
     */
    private $internalError = false;
    /**
     * {strip} status
     *
     * @var bool
     */
    public $strip = false;
    /**
     * compiler object
     *
     * @var Smarty_Internal_TemplateCompilerBase
     */
    public $compiler = null;
    /**
     * smarty object
     *
     * @var Smarty
     */
    public $smarty = null;
    /**
     * template object
     *
     * @var Smarty_Internal_Template
     */
    public $template = null;
    /**
     * block nesting level
     *
     * @var int
     */
    public $block_nesting_level = 0;
    /**
     * security object
     *
     * @var Smarty_Security
     */
    public $security = null;
    /**
     * template prefix array
     *
     * @var \Smarty_Internal_ParseTree[]
     */
    public $template_prefix = array();
    /**
     * template prefix array
     *
     * @var \Smarty_Internal_ParseTree[]
     */
    public $template_postfix = array();
    static public $yy_action    = array(
        43, 266, 267, 379, 115, 203, 33, 201, 274, 275,
        281, 1, 13, 124, 93, 183, 379, 217, 6, 79,
        253, 89, 379, 16, 102, 425, 304, 252, 218, 249,
        211, 129, 190, 302, 26, 213, 425, 33, 11, 39,
        42, 283, 209, 13, 223, 385, 195, 233, 77, 3,
        236, 290, 43, 385, 170, 385, 75, 17, 385, 94,
        274, 275, 281, 1, 385, 128, 385, 196, 385, 217,
        6, 79, 80, 298, 158, 210, 102, 156, 174, 133,
        218, 249, 211, 85, 208, 290, 28, 264, 101, 264,
        199, 39, 42, 283, 209, 31, 312, 182, 195, 259,
        77, 3, 43, 290, 23, 172, 239, 174, 75, 288,
        274, 275, 281, 1, 167, 127, 256, 196, 248, 217,
        6, 79, 345, 40, 20, 305, 102, 248, 345, 157,
        218, 249, 211, 83, 208, 290, 26, 8, 174, 264,
        74, 39, 42, 283, 209, 131, 312, 292, 195, 74,
        77, 3, 43, 290, 295, 99, 243, 174, 75, 345,
        274, 275, 281, 1, 15, 126, 86, 196, 248, 217,
        6, 79, 345, 322, 161, 289, 102, 87, 345, 165,
        218, 249, 211, 290, 208, 115, 26, 128, 255, 221,
        74, 39, 42, 283, 209, 93, 312, 210, 195, 162,
        77, 3, 43, 290, 254, 235, 247, 304, 75, 27,
        274, 275, 281, 1, 172, 127, 425, 177, 248, 217,
        6, 79, 77, 174, 250, 290, 102, 425, 198, 14,
        218, 249, 211, 248, 208, 34, 26, 222, 206, 139,
        74, 39, 42, 283, 209, 198, 312, 23, 195, 291,
        77, 3, 43, 290, 300, 74, 198, 438, 75, 346,
        274, 275, 281, 1, 438, 127, 176, 196, 267, 217,
        6, 79, 346, 161, 289, 290, 102, 23, 346, 238,
        218, 249, 211, 33, 178, 263, 26, 160, 289, 13,
        37, 39, 42, 283, 209, 198, 312, 212, 195, 250,
        77, 3, 43, 290, 216, 189, 155, 97, 75, 381,
        274, 275, 281, 1, 149, 127, 264, 179, 18, 217,
        6, 79, 381, 94, 97, 237, 102, 140, 381, 251,
        218, 249, 211, 4, 194, 94, 26, 264, 198, 37,
        30, 39, 42, 283, 209, 198, 312, 212, 195, 129,
        77, 3, 43, 290, 219, 172, 11, 97, 75, 378,
        274, 275, 281, 1, 101, 127, 438, 186, 210, 217,
        6, 79, 378, 438, 12, 163, 102, 220, 378, 425,
        218, 249, 211, 302, 208, 213, 26, 225, 215, 187,
        425, 39, 42, 283, 209, 234, 312, 7, 195, 212,
        77, 3, 43, 290, 134, 9, 240, 425, 75, 97,
        274, 275, 281, 1, 264, 91, 109, 76, 425, 217,
        6, 79, 253, 293, 426, 16, 102, 251, 198, 252,
        218, 249, 211, 198, 208, 426, 26, 148, 198, 135,
        132, 39, 42, 283, 209, 143, 312, 264, 195, 264,
        77, 3, 43, 290, 138, 264, 205, 24, 75, 166,
        274, 275, 281, 1, 264, 125, 276, 196, 19, 217,
        6, 79, 454, 153, 13, 454, 102, 168, 290, 454,
        218, 249, 211, 174, 208, 314, 5, 136, 210, 251,
        152, 39, 42, 283, 209, 268, 312, 213, 195, 308,
        77, 3, 43, 290, 94, 169, 111, 144, 75, 251,
        274, 275, 281, 1, 229, 128, 7, 196, 313, 217,
        6, 79, 510, 90, 175, 111, 102, 164, 289, 174,
        218, 249, 211, 101, 208, 265, 28, 32, 128, 150,
        261, 39, 42, 283, 209, 10, 312, 317, 195, 224,
        77, 21, 269, 290, 232, 230, 282, 114, 75, 307,
        214, 213, 279, 22, 84, 103, 246, 181, 92, 64,
        260, 262, 454, 77, 93, 454, 290, 257, 316, 454,
        438, 228, 311, 197, 309, 78, 304, 271, 272, 273,
        270, 121, 258, 310, 274, 275, 281, 1, 17, 280,
        110, 284, 81, 217, 6, 79, 438, 146, 94, 438,
        102, 454, 151, 438, 218, 249, 211, 307, 214, 213,
        279, 278, 84, 103, 104, 180, 92, 56, 263, 159,
        130, 152, 93, 295, 137, 257, 316, 295, 251, 88,
        311, 197, 309, 82, 304, 307, 295, 213, 303, 295,
        100, 295, 295, 193, 105, 59, 295, 295, 295, 295,
        93, 295, 295, 257, 316, 295, 295, 295, 311, 197,
        309, 307, 304, 213, 277, 295, 100, 103, 295, 181,
        92, 64, 200, 297, 295, 253, 93, 295, 16, 257,
        316, 295, 252, 295, 311, 197, 309, 295, 304, 295,
        299, 295, 295, 295, 295, 295, 274, 275, 281, 2,
        295, 301, 295, 295, 295, 217, 6, 79, 253, 295,
        295, 16, 102, 299, 204, 252, 218, 249, 211, 274,
        275, 281, 2, 295, 301, 33, 295, 154, 217, 6,
        79, 13, 295, 295, 295, 102, 295, 295, 295, 218,
        249, 211, 295, 295, 286, 25, 307, 295, 213, 295,
        295, 100, 295, 295, 193, 105, 59, 295, 295, 295,
        295, 93, 295, 295, 257, 316, 295, 287, 25, 311,
        197, 309, 307, 304, 213, 295, 454, 100, 295, 454,
        193, 118, 67, 454, 296, 253, 295, 93, 16, 295,
        257, 316, 252, 295, 295, 311, 197, 309, 295, 304,
        295, 295, 307, 295, 213, 295, 188, 100, 295, 295,
        193, 118, 67, 295, 295, 454, 295, 93, 295, 295,
        257, 316, 295, 295, 226, 311, 197, 309, 295, 304,
        295, 295, 307, 295, 213, 295, 192, 100, 295, 295,
        193, 118, 67, 295, 295, 295, 295, 93, 295, 295,
        257, 316, 295, 295, 295, 311, 197, 309, 295, 304,
        295, 295, 307, 295, 213, 295, 191, 98, 295, 295,
        193, 118, 46, 295, 108, 295, 295, 93, 295, 295,
        257, 316, 295, 295, 295, 311, 197, 309, 307, 304,
        213, 295, 295, 98, 295, 295, 193, 118, 47, 295,
        219, 295, 295, 93, 295, 295, 257, 316, 295, 295,
        295, 311, 197, 309, 307, 304, 213, 295, 295, 100,
        295, 295, 193, 118, 45, 295, 295, 295, 295, 93,
        295, 295, 257, 316, 295, 295, 295, 311, 197, 309,
        295, 304, 295, 295, 307, 295, 213, 295, 295, 100,
        295, 295, 193, 118, 70, 295, 295, 295, 295, 93,
        295, 295, 257, 316, 295, 295, 295, 311, 197, 309,
        307, 304, 213, 295, 295, 100, 295, 295, 193, 118,
        49, 295, 295, 295, 295, 93, 295, 295, 257, 316,
        295, 295, 295, 311, 197, 309, 307, 304, 213, 295,
        295, 100, 295, 295, 193, 96, 66, 295, 295, 295,
        295, 93, 295, 295, 257, 316, 295, 295, 295, 311,
        197, 309, 295, 304, 295, 295, 307, 295, 213, 295,
        295, 100, 295, 295, 193, 118, 44, 295, 295, 295,
        295, 93, 295, 295, 257, 316, 295, 295, 295, 311,
        197, 309, 307, 304, 213, 295, 295, 100, 295, 295,
        193, 118, 58, 295, 295, 295, 295, 93, 295, 295,
        257, 316, 295, 295, 295, 311, 197, 309, 307, 304,
        213, 295, 295, 100, 295, 295, 193, 118, 54, 295,
        295, 295, 295, 93, 295, 295, 257, 316, 295, 295,
        295, 311, 197, 309, 295, 304, 295, 295, 307, 295,
        213, 295, 295, 100, 295, 295, 193, 118, 71, 295,
        295, 295, 295, 93, 295, 295, 257, 316, 295, 295,
        295, 311, 197, 309, 307, 304, 213, 295, 295, 100,
        295, 295, 193, 118, 65, 295, 295, 295, 295, 93,
        295, 295, 257, 316, 295, 295, 295, 311, 197, 309,
        307, 304, 213, 295, 295, 100, 295, 295, 193, 96,
        57, 295, 295, 295, 295, 93, 295, 295, 257, 316,
        295, 295, 295, 311, 197, 309, 295, 304, 295, 295,
        307, 295, 213, 295, 295, 100, 295, 295, 185, 106,
        53, 295, 295, 295, 295, 93, 295, 295, 257, 316,
        295, 295, 295, 311, 197, 309, 307, 304, 213, 295,
        295, 100, 295, 295, 193, 118, 60, 295, 295, 295,
        295, 93, 295, 295, 257, 316, 295, 295, 295, 311,
        197, 309, 307, 304, 213, 295, 295, 100, 295, 295,
        193, 118, 73, 295, 295, 295, 295, 93, 295, 295,
        257, 316, 295, 295, 295, 311, 197, 309, 295, 304,
        295, 295, 307, 295, 213, 295, 295, 100, 295, 295,
        193, 118, 55, 295, 295, 295, 295, 93, 295, 295,
        257, 316, 295, 295, 295, 311, 197, 309, 307, 304,
        213, 295, 295, 100, 295, 295, 193, 95, 68, 295,
        295, 295, 295, 93, 295, 295, 257, 316, 295, 295,
        295, 311, 197, 309, 307, 304, 213, 295, 295, 100,
        295, 295, 193, 118, 69, 295, 295, 295, 295, 93,
        295, 295, 257, 316, 295, 295, 295, 311, 197, 309,
        295, 304, 295, 295, 307, 295, 213, 295, 295, 100,
        295, 295, 193, 118, 51, 295, 295, 295, 295, 93,
        295, 295, 257, 316, 295, 295, 295, 311, 197, 309,
        307, 304, 213, 295, 295, 100, 295, 295, 184, 118,
        52, 295, 295, 295, 295, 93, 295, 295, 257, 316,
        295, 295, 295, 311, 197, 309, 307, 304, 213, 295,
        295, 100, 295, 295, 193, 118, 47, 295, 295, 295,
        295, 93, 295, 295, 257, 316, 295, 295, 295, 311,
        197, 309, 295, 304, 295, 295, 307, 295, 213, 295,
        295, 100, 295, 295, 193, 118, 50, 295, 295, 295,
        295, 93, 295, 295, 257, 316, 295, 295, 295, 311,
        197, 309, 307, 304, 213, 295, 295, 100, 295, 295,
        193, 118, 62, 295, 295, 295, 295, 93, 295, 295,
        257, 316, 295, 295, 295, 311, 197, 309, 307, 304,
        213, 295, 295, 100, 295, 295, 193, 118, 63, 295,
        295, 295, 295, 93, 295, 295, 257, 316, 295, 295,
        295, 311, 197, 309, 295, 304, 295, 295, 307, 295,
        213, 295, 295, 100, 295, 295, 193, 118, 61, 295,
        295, 295, 295, 93, 295, 295, 257, 316, 295, 295,
        295, 311, 197, 309, 307, 304, 213, 295, 295, 100,
        295, 295, 193, 118, 48, 295, 295, 295, 295, 93,
        295, 295, 257, 316, 391, 391, 391, 311, 197, 309,
        307, 304, 213, 295, 295, 100, 295, 295, 193, 118,
        72, 295, 295, 295, 295, 93, 295, 295, 257, 316,
        295, 295, 295, 311, 197, 309, 295, 304, 295, 295,
        425, 295, 391, 391, 295, 295, 295, 295, 307, 295,
        213, 425, 198, 100, 38, 295, 193, 112, 391, 391,
        391, 391, 38, 93, 295, 295, 295, 306, 295, 295,
        295, 311, 197, 309, 295, 304, 295, 35, 307, 33,
        213, 295, 295, 100, 295, 13, 193, 120, 295, 295,
        41, 36, 198, 93, 38, 295, 295, 231, 41, 36,
        295, 311, 197, 309, 295, 304, 319, 318, 315, 245,
        295, 207, 295, 295, 319, 318, 315, 245, 295, 33,
        454, 295, 295, 454, 295, 13, 207, 454, 438, 295,
        41, 36, 295, 295, 295, 454, 295, 295, 454, 295,
        295, 14, 454, 438, 295, 295, 319, 318, 315, 245,
        295, 198, 295, 38, 438, 295, 295, 438, 307, 454,
        213, 438, 320, 100, 295, 241, 193, 122, 295, 438,
        295, 295, 438, 93, 454, 295, 438, 295, 198, 295,
        38, 311, 197, 309, 295, 304, 307, 295, 213, 41,
        36, 100, 295, 295, 193, 117, 295, 295, 295, 295,
        295, 93, 295, 295, 295, 319, 318, 315, 245, 311,
        197, 309, 207, 304, 295, 295, 41, 36, 295, 295,
        295, 454, 295, 295, 454, 295, 295, 4, 454, 438,
        295, 295, 319, 318, 315, 245, 295, 294, 295, 295,
        295, 307, 295, 213, 295, 295, 100, 295, 295, 193,
        123, 295, 295, 295, 295, 438, 93, 295, 438, 141,
        454, 295, 438, 167, 311, 197, 309, 295, 304, 264,
        295, 295, 40, 20, 305, 295, 295, 307, 295, 213,
        295, 198, 100, 38, 295, 193, 116, 174, 307, 295,
        213, 295, 93, 100, 295, 295, 193, 113, 295, 295,
        311, 197, 309, 93, 304, 295, 198, 295, 38, 295,
        295, 311, 197, 309, 295, 304, 307, 295, 213, 41,
        36, 100, 295, 295, 193, 119, 295, 295, 295, 295,
        295, 93, 295, 321, 145, 319, 318, 315, 245, 311,
        197, 309, 207, 304, 41, 36, 295, 295, 295, 295,
        295, 454, 295, 295, 454, 295, 295, 295, 454, 438,
        319, 318, 315, 245, 198, 295, 38, 295, 198, 295,
        38, 295, 198, 295, 38, 295, 295, 295, 242, 295,
        295, 295, 285, 295, 295, 438, 171, 295, 438, 295,
        454, 295, 438, 295, 295, 295, 295, 454, 295, 295,
        454, 295, 41, 36, 454, 438, 41, 36, 295, 295,
        41, 36, 198, 295, 38, 295, 295, 295, 319, 318,
        315, 245, 319, 318, 315, 245, 319, 318, 315, 245,
        295, 438, 295, 147, 438, 295, 454, 167, 438, 295,
        295, 295, 295, 264, 295, 295, 40, 20, 305, 227,
        41, 36, 295, 295, 295, 295, 295, 295, 295, 295,
        295, 174, 295, 295, 295, 295, 319, 318, 315, 245,
        198, 295, 38, 295, 198, 295, 38, 142, 198, 295,
        38, 167, 295, 295, 173, 295, 295, 264, 295, 295,
        40, 20, 305, 295, 295, 295, 107, 295, 198, 29,
        38, 295, 198, 295, 38, 174, 295, 295, 41, 36,
        295, 295, 41, 36, 295, 244, 41, 36, 295, 295,
        295, 295, 295, 295, 319, 318, 315, 245, 319, 318,
        315, 245, 319, 318, 315, 245, 41, 36, 295, 295,
        41, 36, 295, 295, 295, 295, 295, 295, 295, 295,
        295, 295, 319, 318, 315, 245, 319, 318, 315, 245,
        198, 295, 295, 295, 295, 295, 295, 295, 295, 295,
        295, 295, 295, 295, 349, 295, 295, 295, 202, 295,
        295, 295, 295, 295, 295, 295, 295, 33, 295, 295,
        295, 295, 295, 13, 295, 295, 425, 295, 295, 295,
        295, 295, 295, 295, 295, 295, 295, 425,
    );
    static public $yy_lookahead = array(
        3, 9, 10, 15, 71, 17, 28, 74, 11, 12,
        13, 14, 34, 16, 81, 18, 28, 20, 21, 22,
        11, 82, 34, 14, 27, 37, 93, 18, 31, 32,
        33, 45, 35, 66, 37, 68, 48, 28, 52, 42,
        43, 44, 45, 34, 47, 15, 49, 16, 51, 52,
        53, 54, 3, 23, 77, 25, 59, 17, 28, 19,
        11, 12, 13, 14, 34, 16, 36, 18, 38, 20,
        21, 22, 105, 106, 94, 45, 27, 73, 101, 73,
        31, 32, 33, 77, 35, 54, 37, 83, 48, 83,
        65, 42, 43, 44, 45, 14, 47, 16, 49, 18,
        51, 52, 3, 54, 36, 101, 38, 101, 59, 15,
        11, 12, 13, 14, 77, 16, 35, 18, 24, 20,
        21, 22, 28, 86, 87, 88, 27, 24, 34, 73,
        31, 32, 33, 77, 35, 54, 37, 36, 101, 83,
        46, 42, 43, 44, 45, 16, 47, 70, 49, 46,
        51, 52, 3, 54, 53, 81, 53, 101, 59, 15,
        11, 12, 13, 14, 23, 16, 37, 18, 24, 20,
        21, 22, 28, 99, 97, 98, 27, 36, 34, 82,
        31, 32, 33, 54, 35, 71, 37, 16, 74, 18,
        46, 42, 43, 44, 45, 81, 47, 45, 49, 77,
        51, 52, 3, 54, 90, 53, 18, 93, 59, 30,
        11, 12, 13, 14, 101, 16, 37, 18, 24, 20,
        21, 22, 51, 101, 102, 54, 27, 48, 1, 17,
        31, 32, 33, 24, 35, 14, 37, 16, 50, 18,
        46, 42, 43, 44, 45, 1, 47, 36, 49, 38,
        51, 52, 3, 54, 60, 46, 1, 45, 59, 15,
        11, 12, 13, 14, 52, 16, 8, 18, 10, 20,
        21, 22, 28, 97, 98, 54, 27, 36, 34, 38,
        31, 32, 33, 28, 35, 95, 37, 97, 98, 34,
        2, 42, 43, 44, 45, 1, 47, 71, 49, 102,
        51, 52, 3, 54, 78, 79, 73, 81, 59, 15,
        11, 12, 13, 14, 71, 16, 83, 18, 17, 20,
        21, 22, 28, 19, 81, 24, 27, 73, 34, 96,
        31, 32, 33, 17, 35, 19, 37, 83, 1, 2,
        17, 42, 43, 44, 45, 1, 47, 71, 49, 45,
        51, 52, 3, 54, 78, 101, 52, 81, 59, 15,
        11, 12, 13, 14, 48, 16, 45, 18, 45, 20,
        21, 22, 28, 52, 14, 16, 27, 18, 34, 37,
        31, 32, 33, 66, 35, 68, 37, 45, 64, 65,
        48, 42, 43, 44, 45, 53, 47, 37, 49, 71,
        51, 52, 3, 54, 73, 37, 78, 37, 59, 81,
        11, 12, 13, 14, 83, 16, 48, 18, 48, 20,
        21, 22, 11, 106, 37, 14, 27, 96, 1, 18,
        31, 32, 33, 1, 35, 48, 37, 73, 1, 73,
        16, 42, 43, 44, 45, 73, 47, 83, 49, 83,
        51, 52, 3, 54, 73, 83, 19, 30, 59, 77,
        11, 12, 13, 14, 83, 16, 70, 18, 28, 20,
        21, 22, 11, 94, 34, 14, 27, 82, 54, 18,
        31, 32, 33, 101, 35, 53, 37, 94, 45, 96,
        94, 42, 43, 44, 45, 66, 47, 68, 49, 92,
        51, 52, 3, 54, 19, 77, 99, 94, 59, 96,
        11, 12, 13, 14, 38, 16, 37, 18, 92, 20,
        21, 22, 62, 63, 18, 99, 27, 97, 98, 101,
        31, 32, 33, 48, 35, 16, 37, 25, 16, 51,
        18, 42, 43, 44, 45, 37, 47, 18, 49, 18,
        51, 41, 9, 54, 53, 53, 15, 18, 59, 66,
        67, 68, 69, 2, 71, 72, 18, 74, 75, 76,
        18, 49, 11, 51, 81, 14, 54, 84, 85, 18,
        19, 18, 89, 90, 91, 18, 93, 4, 5, 6,
        7, 8, 18, 35, 11, 12, 13, 14, 17, 15,
        18, 35, 81, 20, 21, 22, 45, 51, 19, 48,
        27, 50, 94, 52, 31, 32, 33, 66, 67, 68,
        69, 83, 71, 72, 80, 74, 75, 76, 95, 94,
        81, 94, 81, 107, 94, 84, 85, 107, 96, 94,
        89, 90, 91, 81, 93, 66, 107, 68, 98, 107,
        71, 107, 107, 74, 75, 76, 107, 107, 107, 107,
        81, 107, 107, 84, 85, 107, 107, 107, 89, 90,
        91, 66, 93, 68, 69, 107, 71, 72, 107, 74,
        75, 76, 103, 104, 107, 11, 81, 107, 14, 84,
        85, 107, 18, 107, 89, 90, 91, 107, 93, 107,
        5, 107, 107, 107, 107, 107, 11, 12, 13, 14,
        107, 16, 107, 107, 107, 20, 21, 22, 11, 107,
        107, 14, 27, 5, 50, 18, 31, 32, 33, 11,
        12, 13, 14, 107, 16, 28, 107, 30, 20, 21,
        22, 34, 107, 107, 107, 27, 107, 107, 107, 31,
        32, 33, 107, 107, 59, 60, 66, 107, 68, 107,
        107, 71, 107, 107, 74, 75, 76, 107, 107, 107,
        107, 81, 107, 107, 84, 85, 107, 59, 60, 89,
        90, 91, 66, 93, 68, 107, 11, 71, 107, 14,
        74, 75, 76, 18, 104, 11, 107, 81, 14, 107,
        84, 85, 18, 107, 107, 89, 90, 91, 107, 93,
        107, 107, 66, 107, 68, 107, 100, 71, 107, 107,
        74, 75, 76, 107, 107, 50, 107, 81, 107, 107,
        84, 85, 107, 107, 50, 89, 90, 91, 107, 93,
        107, 107, 66, 107, 68, 107, 100, 71, 107, 107,
        74, 75, 76, 107, 107, 107, 107, 81, 107, 107,
        84, 85, 107, 107, 107, 89, 90, 91, 107, 93,
        107, 107, 66, 107, 68, 107, 100, 71, 107, 107,
        74, 75, 76, 107, 78, 107, 107, 81, 107, 107,
        84, 85, 107, 107, 107, 89, 90, 91, 66, 93,
        68, 107, 107, 71, 107, 107, 74, 75, 76, 107,
        78, 107, 107, 81, 107, 107, 84, 85, 107, 107,
        107, 89, 90, 91, 66, 93, 68, 107, 107, 71,
        107, 107, 74, 75, 76, 107, 107, 107, 107, 81,
        107, 107, 84, 85, 107, 107, 107, 89, 90, 91,
        107, 93, 107, 107, 66, 107, 68, 107, 107, 71,
        107, 107, 74, 75, 76, 107, 107, 107, 107, 81,
        107, 107, 84, 85, 107, 107, 107, 89, 90, 91,
        66, 93, 68, 107, 107, 71, 107, 107, 74, 75,
        76, 107, 107, 107, 107, 81, 107, 107, 84, 85,
        107, 107, 107, 89, 90, 91, 66, 93, 68, 107,
        107, 71, 107, 107, 74, 75, 76, 107, 107, 107,
        107, 81, 107, 107, 84, 85, 107, 107, 107, 89,
        90, 91, 107, 93, 107, 107, 66, 107, 68, 107,
        107, 71, 107, 107, 74, 75, 76, 107, 107, 107,
        107, 81, 107, 107, 84, 85, 107, 107, 107, 89,
        90, 91, 66, 93, 68, 107, 107, 71, 107, 107,
        74, 75, 76, 107, 107, 107, 107, 81, 107, 107,
        84, 85, 107, 107, 107, 89, 90, 91, 66, 93,
        68, 107, 107, 71, 107, 107, 74, 75, 76, 107,
        107, 107, 107, 81, 107, 107, 84, 85, 107, 107,
        107, 89, 90, 91, 107, 93, 107, 107, 66, 107,
        68, 107, 107, 71, 107, 107, 74, 75, 76, 107,
        107, 107, 107, 81, 107, 107, 84, 85, 107, 107,
        107, 89, 90, 91, 66, 93, 68, 107, 107, 71,
        107, 107, 74, 75, 76, 107, 107, 107, 107, 81,
        107, 107, 84, 85, 107, 107, 107, 89, 90, 91,
        66, 93, 68, 107, 107, 71, 107, 107, 74, 75,
        76, 107, 107, 107, 107, 81, 107, 107, 84, 85,
        107, 107, 107, 89, 90, 91, 107, 93, 107, 107,
        66, 107, 68, 107, 107, 71, 107, 107, 74, 75,
        76, 107, 107, 107, 107, 81, 107, 107, 84, 85,
        107, 107, 107, 89, 90, 91, 66, 93, 68, 107,
        107, 71, 107, 107, 74, 75, 76, 107, 107, 107,
        107, 81, 107, 107, 84, 85, 107, 107, 107, 89,
        90, 91, 66, 93, 68, 107, 107, 71, 107, 107,
        74, 75, 76, 107, 107, 107, 107, 81, 107, 107,
        84, 85, 107, 107, 107, 89, 90, 91, 107, 93,
        107, 107, 66, 107, 68, 107, 107, 71, 107, 107,
        74, 75, 76, 107, 107, 107, 107, 81, 107, 107,
        84, 85, 107, 107, 107, 89, 90, 91, 66, 93,
        68, 107, 107, 71, 107, 107, 74, 75, 76, 107,
        107, 107, 107, 81, 107, 107, 84, 85, 107, 107,
        107, 89, 90, 91, 66, 93, 68, 107, 107, 71,
        107, 107, 74, 75, 76, 107, 107, 107, 107, 81,
        107, 107, 84, 85, 107, 107, 107, 89, 90, 91,
        107, 93, 107, 107, 66, 107, 68, 107, 107, 71,
        107, 107, 74, 75, 76, 107, 107, 107, 107, 81,
        107, 107, 84, 85, 107, 107, 107, 89, 90, 91,
        66, 93, 68, 107, 107, 71, 107, 107, 74, 75,
        76, 107, 107, 107, 107, 81, 107, 107, 84, 85,
        107, 107, 107, 89, 90, 91, 66, 93, 68, 107,
        107, 71, 107, 107, 74, 75, 76, 107, 107, 107,
        107, 81, 107, 107, 84, 85, 107, 107, 107, 89,
        90, 91, 107, 93, 107, 107, 66, 107, 68, 107,
        107, 71, 107, 107, 74, 75, 76, 107, 107, 107,
        107, 81, 107, 107, 84, 85, 107, 107, 107, 89,
        90, 91, 66, 93, 68, 107, 107, 71, 107, 107,
        74, 75, 76, 107, 107, 107, 107, 81, 107, 107,
        84, 85, 107, 107, 107, 89, 90, 91, 66, 93,
        68, 107, 107, 71, 107, 107, 74, 75, 76, 107,
        107, 107, 107, 81, 107, 107, 84, 85, 107, 107,
        107, 89, 90, 91, 107, 93, 107, 107, 66, 107,
        68, 107, 107, 71, 107, 107, 74, 75, 76, 107,
        107, 107, 107, 81, 107, 107, 84, 85, 107, 107,
        107, 89, 90, 91, 66, 93, 68, 107, 107, 71,
        107, 107, 74, 75, 76, 107, 107, 107, 107, 81,
        107, 107, 84, 85, 1, 2, 3, 89, 90, 91,
        66, 93, 68, 107, 107, 71, 107, 107, 74, 75,
        76, 107, 107, 107, 107, 81, 107, 107, 84, 85,
        107, 107, 107, 89, 90, 91, 107, 93, 107, 107,
        37, 107, 39, 40, 107, 107, 107, 107, 66, 107,
        68, 48, 1, 71, 3, 107, 74, 75, 55, 56,
        57, 58, 3, 81, 107, 107, 107, 85, 107, 107,
        107, 89, 90, 91, 107, 93, 107, 26, 66, 28,
        68, 107, 107, 71, 107, 34, 74, 75, 107, 107,
        39, 40, 1, 81, 3, 107, 107, 85, 39, 40,
        107, 89, 90, 91, 107, 93, 55, 56, 57, 58,
        107, 2, 107, 107, 55, 56, 57, 58, 107, 28,
        11, 107, 107, 14, 107, 34, 2, 18, 19, 107,
        39, 40, 107, 107, 107, 11, 107, 107, 14, 107,
        107, 17, 18, 19, 107, 107, 55, 56, 57, 58,
        107, 1, 107, 3, 45, 107, 107, 48, 66, 50,
        68, 52, 53, 71, 107, 15, 74, 75, 107, 45,
        107, 107, 48, 81, 50, 107, 52, 107, 1, 107,
        3, 89, 90, 91, 107, 93, 66, 107, 68, 39,
        40, 71, 107, 107, 74, 75, 107, 107, 107, 107,
        107, 81, 107, 107, 107, 55, 56, 57, 58, 89,
        90, 91, 2, 93, 107, 107, 39, 40, 107, 107,
        107, 11, 107, 107, 14, 107, 107, 17, 18, 19,
        107, 107, 55, 56, 57, 58, 107, 60, 107, 107,
        107, 66, 107, 68, 107, 107, 71, 107, 107, 74,
        75, 107, 107, 107, 107, 45, 81, 107, 48, 73,
        50, 107, 52, 77, 89, 90, 91, 107, 93, 83,
        107, 107, 86, 87, 88, 107, 107, 66, 107, 68,
        107, 1, 71, 3, 107, 74, 75, 101, 66, 107,
        68, 107, 81, 71, 107, 107, 74, 75, 107, 107,
        89, 90, 91, 81, 93, 107, 1, 107, 3, 107,
        107, 89, 90, 91, 107, 93, 66, 107, 68, 39,
        40, 71, 107, 107, 74, 75, 107, 107, 107, 107,
        107, 81, 107, 53, 29, 55, 56, 57, 58, 89,
        90, 91, 2, 93, 39, 40, 107, 107, 107, 107,
        107, 11, 107, 107, 14, 107, 107, 107, 18, 19,
        55, 56, 57, 58, 1, 107, 3, 107, 1, 107,
        3, 107, 1, 107, 3, 107, 107, 107, 15, 107,
        107, 107, 15, 107, 107, 45, 15, 107, 48, 107,
        50, 107, 52, 107, 107, 107, 107, 11, 107, 107,
        14, 107, 39, 40, 18, 19, 39, 40, 107, 107,
        39, 40, 1, 107, 3, 107, 107, 107, 55, 56,
        57, 58, 55, 56, 57, 58, 55, 56, 57, 58,
        107, 45, 107, 73, 48, 107, 50, 77, 52, 107,
        107, 107, 107, 83, 107, 107, 86, 87, 88, 38,
        39, 40, 107, 107, 107, 107, 107, 107, 107, 107,
        107, 101, 107, 107, 107, 107, 55, 56, 57, 58,
        1, 107, 3, 107, 1, 107, 3, 73, 1, 107,
        3, 77, 107, 107, 15, 107, 107, 83, 107, 107,
        86, 87, 88, 107, 107, 107, 23, 107, 1, 2,
        3, 107, 1, 107, 3, 101, 107, 107, 39, 40,
        107, 107, 39, 40, 107, 38, 39, 40, 107, 107,
        107, 107, 107, 107, 55, 56, 57, 58, 55, 56,
        57, 58, 55, 56, 57, 58, 39, 40, 107, 107,
        39, 40, 107, 107, 107, 107, 107, 107, 107, 107,
        107, 107, 55, 56, 57, 58, 55, 56, 57, 58,
        1, 107, 107, 107, 107, 107, 107, 107, 107, 107,
        107, 107, 107, 107, 15, 107, 107, 107, 19, 107,
        107, 107, 107, 107, 107, 107, 107, 28, 107, 107,
        107, 107, 107, 34, 107, 107, 37, 107, 107, 107,
        107, 107, 107, 107, 107, 107, 107, 48,
    );
    static public $yy_shift_ofst = array(
        -23, 399, 399, 349, 99, 449, 449, 99, 349, 99,
        99, -3, 99, 99, 249, 99, 99, 99, 99, 299,
        99, 149, 199, 99, 99, 99, 99, 99, 99, 99,
        99, 99, 99, 299, 99, 99, 49, 49, 499, 499,
        499, 499, 499, 499, 1621, 1661, 1661, 1981, 2067, 2039,
        2047, 2043, 1747, 1850, 1720, 1941, 1937, 1875, 1933, 2071,
        2071, 2071, 2071, 2071, 2071, 2071, 2071, 2071, 2071, 2071,
        2071, 2071, 1629, 1629, 522, 695, 2129, 171, 255, 129,
        718, 707, 9, 255, 316, 255, 129, 129, 304, 337,
        583, 1780, 244, 784, 221, 344, 294, 411, 40, 411,
        485, 359, 440, -22, -22, 427, 432, 424, -22, 359,
        437, 589, 227, 227, 227, 589, 227, 227, 227, 227,
        -23, -23, -23, -23, 1679, 1694, 561, 1910, 1956, 81,
        674, 212, 461, -22, -22, -22, -14, -14, -22, 360,
        -22, -22, -22, -22, -14, 31, 321, -22, -22, 301,
        321, -14, -14, -14, 31, -22, -22, -22, -14, -14,
        589, 589, 227, 508, 589, 288, 227, 227, 288, 227,
        227, -23, -23, -23, -23, -23, -23, 1573, 30, -12,
        94, 144, 775, 342, 194, 103, 179, 258, 211, 141,
        152, 68, 241, 209, 323, 387, 370, 368, 188, -8,
        101, 556, 567, 563, 552, 539, 548, 574, 443, 558,
        566, 582, 581, 584, 541, 543, 512, 519, 506, 476,
        479, 488, 508, 502, 501, 531, 529, 510,
    );
    static public $yy_reduce_ofst   = array(
        460, 493, 551, 579, 605, 832, 806, 776, 690, 746,
        716, 1134, 1216, 1242, 1160, 1298, 1022, 1052, 1078, 1104,
        1268, 1488, 1514, 1432, 1462, 1324, 1350, 1406, 1380, 1186,
        888, 996, 970, 940, 914, 858, 1552, 1582, 1745, 1690,
        1781, 1820, 1792, 1662, 1974, 1930, 1756, 37, 37, 37,
        37, 37, 37, 37, 37, 37, 37, 37, 37, 37,
        37, 37, 37, 37, 37, 37, 37, 37, 37, 37,
        37, 37, 37, 37, 114, -33, 6, -67, 56, 226,
        317, 233, 331, 254, 77, 4, 276, 328, 190, 122,
        429, 396, -23, 393, 74, -23, -23, 393, 176, 413,
        176, 407, 381, 366, 364, -23, -23, 243, 372, 426,
        428, 430, -23, -23, 382, 176, -23, -23, -23, -23,
        -23, 324, -23, -23, 537, 537, 537, 537, 537, 549,
        542, 537, 537, 538, 538, 538, 533, 533, 538, 540,
        538, 538, 538, 538, 533, 521, 518, 538, 538, 544,
        535, 533, 533, 533, 562, 538, 538, 538, 533, 533,
        550, 550, 113, 545, 550, 197, 113, 113, 197, 113,
        113, 379, 395, -20, 97, -61, 25,
    );
    static public $yyExpectedTokens = array(
        array(),
        array(3, 11, 12, 13, 14, 16, 18, 20, 21, 22, 27, 31, 32, 33, 35, 37, 42, 43, 44, 45, 47, 49, 51, 52, 54, 59,),
        array(3, 11, 12, 13, 14, 16, 18, 20, 21, 22, 27, 31, 32, 33, 35, 37, 42, 43, 44, 45, 47, 49, 51, 52, 54, 59,),
        array(3, 11, 12, 13, 14, 16, 18, 20, 21, 22, 27, 31, 32, 33, 35, 37, 42, 43, 44, 45, 47, 49, 51, 52, 54, 59,),
        array(3, 11, 12, 13, 14, 16, 18, 20, 21, 22, 27, 31, 32, 33, 35, 37, 42, 43, 44, 45, 47, 49, 51, 52, 54, 59,),
        array(3, 11, 12, 13, 14, 16, 18, 20, 21, 22, 27, 31, 32, 33, 35, 37, 42, 43, 44, 45, 47, 49, 51, 52, 54, 59,),
        array(3, 11, 12, 13, 14, 16, 18, 20, 21, 22, 27, 31, 32, 33, 35, 37, 42, 43, 44, 45, 47, 49, 51, 52, 54, 59,),
        array(3, 11, 12, 13, 14, 16, 18, 20, 21, 22, 27, 31, 32, 33, 35, 37, 42, 43, 44, 45, 47, 49, 51, 52, 54, 59,),
        array(3, 11, 12, 13, 14, 16, 18, 20, 21, 22, 27, 31, 32, 33, 35, 37, 42, 43, 44, 45, 47, 49, 51, 52, 54, 59,),
        array(3, 11, 12, 13, 14, 16, 18, 20, 21, 22, 27, 31, 32, 33, 35, 37, 42, 43, 44, 45, 47, 49, 51, 52, 54, 59,),
        array(3, 11, 12, 13, 14, 16, 18, 20, 21, 22, 27, 31, 32, 33, 35, 37, 42, 43, 44, 45, 47, 49, 51, 52, 54, 59,),
        array(3, 11, 12, 13, 14, 16, 18, 20, 21, 22, 27, 31, 32, 33, 35, 37, 42, 43, 44, 45, 47, 49, 51, 52, 53, 54,
              59,),
        array(3, 11, 12, 13, 14, 16, 18, 20, 21, 22, 27, 31, 32, 33, 35, 37, 42, 43, 44, 45, 47, 49, 51, 52, 54, 59,),
        array(3, 11, 12, 13, 14, 16, 18, 20, 21, 22, 27, 31, 32, 33, 35, 37, 42, 43, 44, 45, 47, 49, 51, 52, 54, 59,),
        array(3, 11, 12, 13, 14, 16, 18, 20, 21, 22, 27, 31, 32, 33, 35, 37, 42, 43, 44, 45, 47, 49, 51, 52, 54, 59,),
        array(3, 11, 12, 13, 14, 16, 18, 20, 21, 22, 27, 31, 32, 33, 35, 37, 42, 43, 44, 45, 47, 49, 51, 52, 54, 59,),
        array(3, 11, 12, 13, 14, 16, 18, 20, 21, 22, 27, 31, 32, 33, 35, 37, 42, 43, 44, 45, 47, 49, 51, 52, 54, 59,),
        array(3, 11, 12, 13, 14, 16, 18, 20, 21, 22, 27, 31, 32, 33, 35, 37, 42, 43, 44, 45, 47, 49, 51, 52, 54, 59,),
        array(3, 11, 12, 13, 14, 16, 18, 20, 21, 22, 27, 31, 32, 33, 35, 37, 42, 43, 44, 45, 47, 49, 51, 52, 54, 59,),
        array(3, 11, 12, 13, 14, 16, 18, 20, 21, 22, 27, 31, 32, 33, 35, 37, 42, 43, 44, 45, 47, 49, 51, 52, 54, 59,),
        array(3, 11, 12, 13, 14, 16, 18, 20, 21, 22, 27, 31, 32, 33, 35, 37, 42, 43, 44, 45, 47, 49, 51, 52, 54, 59,),
        array(3, 11, 12, 13, 14, 16, 18, 20, 21, 22, 27, 31, 32, 33, 35, 37, 42, 43, 44, 45, 47, 49, 51, 52, 54, 59,),
        array(3, 11, 12, 13, 14, 16, 18, 20, 21, 22, 27, 31, 32, 33, 35, 37, 42, 43, 44, 45, 47, 49, 51, 52, 54, 59,),
        array(3, 11, 12, 13, 14, 16, 18, 20, 21, 22, 27, 31, 32, 33, 35, 37, 42, 43, 44, 45, 47, 49, 51, 52, 54, 59,),
        array(3, 11, 12, 13, 14, 16, 18, 20, 21, 22, 27, 31, 32, 33, 35, 37, 42, 43, 44, 45, 47, 49, 51, 52, 54, 59,),
        array(3, 11, 12, 13, 14, 16, 18, 20, 21, 22, 27, 31, 32, 33, 35, 37, 42, 43, 44, 45, 47, 49, 51, 52, 54, 59,),
        array(3, 11, 12, 13, 14, 16, 18, 20, 21, 22, 27, 31, 32, 33, 35, 37, 42, 43, 44, 45, 47, 49, 51, 52, 54, 59,),
        array(3, 11, 12, 13, 14, 16, 18, 20, 21, 22, 27, 31, 32, 33, 35, 37, 42, 43, 44, 45, 47, 49, 51, 52, 54, 59,),
        array(3, 11, 12, 13, 14, 16, 18, 20, 21, 22, 27, 31, 32, 33, 35, 37, 42, 43, 44, 45, 47, 49, 51, 52, 54, 59,),
        array(3, 11, 12, 13, 14, 16, 18, 20, 21, 22, 27, 31, 32, 33, 35, 37, 42, 43, 44, 45, 47, 49, 51, 52, 54, 59,),
        array(3, 11, 12, 13, 14, 16, 18, 20, 21, 22, 27, 31, 32, 33, 35, 37, 42, 43, 44, 45, 47, 49, 51, 52, 54, 59,),
        array(3, 11, 12, 13, 14, 16, 18, 20, 21, 22, 27, 31, 32, 33, 35, 37, 42, 43, 44, 45, 47, 49, 51, 52, 54, 59,),
        array(3, 11, 12, 13, 14, 16, 18, 20, 21, 22, 27, 31, 32, 33, 35, 37, 42, 43, 44, 45, 47, 49, 51, 52, 54, 59,),
        array(3, 11, 12, 13, 14, 16, 18, 20, 21, 22, 27, 31, 32, 33, 35, 37, 42, 43, 44, 45, 47, 49, 51, 52, 54, 59,),
        array(3, 11, 12, 13, 14, 16, 18, 20, 21, 22, 27, 31, 32, 33, 35, 37, 42, 43, 44, 45, 47, 49, 51, 52, 54, 59,),
        array(3, 11, 12, 13, 14, 16, 18, 20, 21, 22, 27, 31, 32, 33, 35, 37, 42, 43, 44, 45, 47, 49, 51, 52, 54, 59,),
        array(3, 11, 12, 13, 14, 16, 18, 20, 21, 22, 27, 31, 32, 33, 35, 37, 42, 43, 44, 45, 47, 49, 51, 52, 54, 59,),
        array(3, 11, 12, 13, 14, 16, 18, 20, 21, 22, 27, 31, 32, 33, 35, 37, 42, 43, 44, 45, 47, 49, 51, 52, 54, 59,),
        array(3, 11, 12, 13, 14, 16, 18, 20, 21, 22, 27, 31, 32, 33, 35, 37, 42, 43, 44, 45, 47, 49, 51, 54, 59,),
        array(3, 11, 12, 13, 14, 16, 18, 20, 21, 22, 27, 31, 32, 33, 35, 37, 42, 43, 44, 45, 47, 49, 51, 54, 59,),
        array(3, 11, 12, 13, 14, 16, 18, 20, 21, 22, 27, 31, 32, 33, 35, 37, 42, 43, 44, 45, 47, 49, 51, 54, 59,),
        array(3, 11, 12, 13, 14, 16, 18, 20, 21, 22, 27, 31, 32, 33, 35, 37, 42, 43, 44, 45, 47, 49, 51, 54, 59,),
        array(3, 11, 12, 13, 14, 16, 18, 20, 21, 22, 27, 31, 32, 33, 35, 37, 42, 43, 44, 45, 47, 49, 51, 54, 59,),
        array(3, 11, 12, 13, 14, 16, 18, 20, 21, 22, 27, 31, 32, 33, 35, 37, 42, 43, 44, 45, 47, 49, 51, 54, 59,),
        array(1, 3, 26, 28, 34, 39, 40, 55, 56, 57, 58,),
        array(1, 3, 28, 34, 39, 40, 55, 56, 57, 58,),
        array(1, 3, 28, 34, 39, 40, 55, 56, 57, 58,),
        array(1, 3, 38, 39, 40, 55, 56, 57, 58,),
        array(1, 2, 3, 39, 40, 55, 56, 57, 58,),
        array(1, 3, 15, 39, 40, 55, 56, 57, 58,),
        array(1, 3, 38, 39, 40, 55, 56, 57, 58,),
        array(1, 3, 23, 39, 40, 55, 56, 57, 58,),
        array(1, 3, 39, 40, 55, 56, 57, 58, 60,),
        array(1, 3, 39, 40, 53, 55, 56, 57, 58,),
        array(1, 3, 15, 39, 40, 55, 56, 57, 58,),
        array(1, 3, 15, 39, 40, 55, 56, 57, 58,),
        array(1, 3, 15, 39, 40, 55, 56, 57, 58,),
        array(1, 3, 29, 39, 40, 55, 56, 57, 58,),
        array(1, 3, 15, 39, 40, 55, 56, 57, 58,),
        array(1, 3, 39, 40, 55, 56, 57, 58,),
        array(1, 3, 39, 40, 55, 56, 57, 58,),
        array(1, 3, 39, 40, 55, 56, 57, 58,),
        array(1, 3, 39, 40, 55, 56, 57, 58,),
        array(1, 3, 39, 40, 55, 56, 57, 58,),
        array(1, 3, 39, 40, 55, 56, 57, 58,),
        array(1, 3, 39, 40, 55, 56, 57, 58,),
        array(1, 3, 39, 40, 55, 56, 57, 58,),
        array(1, 3, 39, 40, 55, 56, 57, 58,),
        array(1, 3, 39, 40, 55, 56, 57, 58,),
        array(1, 3, 39, 40, 55, 56, 57, 58,),
        array(1, 3, 39, 40, 55, 56, 57, 58,),
        array(1, 3, 39, 40, 55, 56, 57, 58,),
        array(3, 39, 40, 55, 56, 57, 58,),
        array(3, 39, 40, 55, 56, 57, 58,),
        array(16, 18, 49, 51, 54,),
        array(5, 11, 12, 13, 14, 16, 20, 21, 22, 27, 31, 32, 33, 59, 60,),
        array(1, 15, 19, 28, 34, 37, 48,),
        array(16, 18, 51, 54,),
        array(1, 28, 34,),
        array(16, 37, 54,),
        array(5, 11, 12, 13, 14, 16, 20, 21, 22, 27, 31, 32, 33, 59, 60,),
        array(11, 14, 18, 28, 30, 34,),
        array(11, 14, 18, 28, 34,),
        array(1, 28, 34,),
        array(17, 19, 48,),
        array(1, 28, 34,),
        array(16, 37, 54,),
        array(16, 37, 54,),
        array(19, 45, 52,),
        array(1, 2,),
        array(4, 5, 6, 7, 8, 11, 12, 13, 14, 20, 21, 22, 27, 31, 32, 33,),
        array(2, 11, 14, 17, 18, 19, 45, 48, 50, 52,),
        array(1, 15, 28, 34,),
        array(11, 14, 18, 50,),
        array(14, 16, 18, 54,),
        array(1, 15, 28, 34,),
        array(1, 15, 28, 34,),
        array(11, 14, 18,),
        array(17, 19, 48,),
        array(11, 14, 18,),
        array(19, 48,),
        array(16, 18,),
        array(28, 34,),
        array(28, 34,),
        array(28, 34,),
        array(1, 30,),
        array(1, 53,),
        array(16, 54,),
        array(28, 34,),
        array(16, 18,),
        array(1, 19,),
        array(19,),
        array(1,),
        array(1,),
        array(1,),
        array(19,),
        array(1,),
        array(1,),
        array(1,),
        array(1,),
        array(),
        array(),
        array(),
        array(),
        array(2, 11, 14, 18, 19, 45, 48, 50, 52, 53,),
        array(2, 11, 14, 17, 18, 19, 45, 48, 50, 52,),
        array(2, 11, 14, 18, 19, 45, 48, 50, 52,),
        array(2, 11, 14, 18, 19, 45, 48, 50, 52,),
        array(11, 14, 18, 19, 45, 48, 50, 52,),
        array(14, 16, 18, 35, 54,),
        array(11, 14, 18, 50,),
        array(17, 45, 52,),
        array(11, 14, 18,),
        array(28, 34,),
        array(28, 34,),
        array(28, 34,),
        array(45, 52,),
        array(45, 52,),
        array(28, 34,),
        array(14, 37,),
        array(28, 34,),
        array(28, 34,),
        array(28, 34,),
        array(28, 34,),
        array(45, 52,),
        array(16, 54,),
        array(45, 52,),
        array(28, 34,),
        array(28, 34,),
        array(17, 24,),
        array(45, 52,),
        array(45, 52,),
        array(45, 52,),
        array(45, 52,),
        array(16, 54,),
        array(28, 34,),
        array(28, 34,),
        array(28, 34,),
        array(45, 52,),
        array(45, 52,),
        array(19,),
        array(19,),
        array(1,),
        array(37,),
        array(19,),
        array(2,),
        array(1,),
        array(1,),
        array(2,),
        array(1,),
        array(1,),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(1, 2, 3, 37, 39, 40, 48, 55, 56, 57, 58,),
        array(15, 23, 25, 28, 34, 36, 38, 45,),
        array(15, 17, 28, 34, 37, 48,),
        array(15, 24, 28, 34, 46,),
        array(15, 24, 28, 34, 46,),
        array(11, 14, 18, 50,),
        array(37, 45, 48, 53,),
        array(24, 46, 60,),
        array(24, 46, 53,),
        array(30, 37, 48,),
        array(8, 10,),
        array(36, 38,),
        array(23, 36,),
        array(45, 53,),
        array(36, 38,),
        array(36, 38,),
        array(24, 46,),
        array(17, 45,),
        array(37, 48,),
        array(37, 48,),
        array(37, 48,),
        array(18, 50,),
        array(9, 10,),
        array(36, 53,),
        array(51,),
        array(18,),
        array(18,),
        array(18,),
        array(18,),
        array(18,),
        array(18,),
        array(45,),
        array(35,),
        array(35,),
        array(18,),
        array(17,),
        array(15,),
        array(15,),
        array(9,),
        array(25,),
        array(16,),
        array(18,),
        array(38,),
        array(37,),
        array(51,),
        array(37,),
        array(53,),
        array(53,),
        array(18,),
        array(18,),
        array(41,),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
    );
    static public $yy_default       = array(
        334, 509, 509, 494, 509, 509, 509, 473, 509, 473,
        473, 509, 509, 509, 509, 509, 509, 509, 509, 509,
        509, 509, 509, 509, 509, 509, 509, 509, 509, 509,
        509, 509, 509, 509, 509, 509, 509, 509, 509, 509,
        509, 509, 509, 509, 375, 375, 354, 509, 509, 509,
        509, 509, 509, 509, 509, 509, 347, 380, 509, 497,
        386, 495, 496, 471, 347, 359, 380, 472, 377, 397,
        382, 387, 401, 402, 509, 509, 413, 509, 375, 509,
        509, 375, 375, 375, 428, 375, 509, 509, 485, 366,
        323, 427, 389, 438, 509, 389, 389, 438, 428, 438,
        428, 509, 375, 375, 375, 389, 389, 509, 356, 509,
        369, 482, 400, 406, 371, 428, 396, 405, 389, 392,
        480, 332, 404, 393, 427, 427, 427, 427, 427, 509,
        440, 454, 438, 348, 364, 344, 436, 463, 365, 438,
        352, 355, 361, 357, 464, 509, 433, 362, 358, 509,
        431, 434, 435, 466, 509, 363, 350, 351, 465, 432,
        486, 460, 367, 438, 483, 475, 372, 395, 474, 370,
        422, 438, 479, 438, 479, 479, 332, 413, 409, 413,
        403, 403, 439, 413, 403, 403, 413, 330, 509, 509,
        409, 509, 509, 403, 409, 423, 413, 509, 509, 509,
        509, 509, 509, 509, 509, 509, 509, 509, 409, 509,
        411, 509, 509, 509, 509, 509, 383, 509, 509, 509,
        484, 509, 454, 418, 509, 509, 509, 415, 376, 388,
        447, 481, 446, 454, 445, 448, 453, 360, 468, 469,
        384, 459, 444, 450, 415, 490, 476, 477, 407, 368,
        478, 456, 457, 458, 416, 417, 443, 390, 391, 442,
        441, 425, 426, 437, 374, 353, 329, 331, 333, 328,
        327, 324, 325, 326, 335, 336, 341, 343, 373, 340,
        339, 337, 338, 408, 410, 506, 498, 499, 505, 461,
        455, 470, 342, 500, 503, 491, 493, 492, 501, 508,
        502, 504, 507, 462, 430, 398, 399, 421, 420, 419,
        412, 414, 418, 424, 451, 489, 394, 429, 488, 487,
        449, 452, 467,
    );
    public static $yyFallback = array();
    public $yyTraceFILE;
    public $yyTracePrompt;
public $yyidx;
public $yyerrcnt;
public $yystack = array();
    public $yyTokenName = array(
        '$', 'VERT', 'COLON', 'UNIMATH',
        'PHP', 'TEXT', 'STRIPON', 'STRIPOFF',
        'LITERALSTART', 'LITERALEND', 'LITERAL', 'SIMPELOUTPUT',
        'SIMPLETAG', 'SMARTYBLOCKCHILDPARENT', 'LDEL', 'RDEL',
        'DOLLARID', 'EQUAL', 'ID', 'PTR',
        'LDELMAKENOCACHE', 'LDELIF', 'LDELFOR', 'SEMICOLON',
        'INCDEC', 'TO', 'STEP', 'LDELFOREACH',
        'SPACE', 'AS', 'APTR', 'LDELSETFILTER',
        'CLOSETAG', 'LDELSLASH', 'ATTR', 'INTEGER',
        'COMMA', 'OPENP', 'CLOSEP', 'MATH',
        'ISIN', 'QMARK', 'NOT', 'TYPECAST',
        'HEX', 'DOT', 'INSTANCEOF', 'SINGLEQUOTESTRING',
        'DOUBLECOLON', 'NAMESPACE', 'AT', 'HATCH',
        'OPENB', 'CLOSEB', 'DOLLAR', 'LOGOP',
        'SLOGOP', 'TLOGOP', 'SINGLECOND', 'QUOTE',
        'BACKTICK', 'error', 'start', 'template',
        'literal_e2', 'literal_e1', 'smartytag', 'tagbody',
        'tag', 'outattr', 'eqoutattr', 'varindexed',
        'output', 'attributes', 'variable', 'value',
        'expr', 'modifierlist', 'statement', 'statements',
        'foraction', 'varvar', 'modparameters', 'attribute',
        'ternary', 'array', 'tlop', 'lop',
        'scond', 'function', 'ns1', 'doublequoted_with_quotes',
        'static_class_access', 'object', 'arrayindex', 'indexdef',
        'varvarele', 'objectchain', 'objectelement', 'method',
        'params', 'modifier', 'modparameter', 'arrayelements',
        'arrayelement', 'doublequoted', 'doublequotedcontent',
    );
    public static $yyRuleName = array(
        'start ::= template',
        'template ::= template PHP',
        'template ::= template TEXT',
        'template ::= template STRIPON',
        'template ::= template STRIPOFF',
        'template ::= template LITERALSTART literal_e2 LITERALEND',
        'literal_e2 ::= literal_e1 LITERALSTART literal_e1 LITERALEND',
        'literal_e2 ::= literal_e1',
        'literal_e1 ::= literal_e1 LITERAL',
        'literal_e1 ::=',
        'template ::= template smartytag',
        'template ::=',
        'smartytag ::= SIMPELOUTPUT',
        'smartytag ::= SIMPLETAG',
        'smartytag ::= SMARTYBLOCKCHILDPARENT',
        'smartytag ::= LDEL tagbody RDEL',
        'smartytag ::= tag RDEL',
        'tagbody ::= outattr',
        'tagbody ::= DOLLARID eqoutattr',
        'tagbody ::= varindexed eqoutattr',
        'eqoutattr ::= EQUAL outattr',
        'outattr ::= output attributes',
        'output ::= variable',
        'output ::= value',
        'output ::= expr',
        'tag ::= LDEL ID attributes',
        'tag ::= LDEL ID',
        'tag ::= LDEL ID modifierlist attributes',
        'tag ::= LDEL ID PTR ID attributes',
        'tag ::= LDEL ID PTR ID modifierlist attributes',
        'tag ::= LDELMAKENOCACHE DOLLARID',
        'tag ::= LDELIF expr',
        'tag ::= LDELIF expr attributes',
        'tag ::= LDELIF statement',
        'tag ::= LDELIF statement attributes',
        'tag ::= LDELFOR statements SEMICOLON expr SEMICOLON varindexed foraction attributes',
        'foraction ::= EQUAL expr',
        'foraction ::= INCDEC',
        'tag ::= LDELFOR statement TO expr attributes',
        'tag ::= LDELFOR statement TO expr STEP expr attributes',
        'tag ::= LDELFOREACH SPACE expr AS varvar attributes',
        'tag ::= LDELFOREACH SPACE expr AS varvar APTR varvar attributes',
        'tag ::= LDELFOREACH attributes',
        'tag ::= LDELSETFILTER ID modparameters',
        'tag ::= LDELSETFILTER ID modparameters modifierlist',
        'smartytag ::= CLOSETAG',
        'tag ::= LDELSLASH ID',
        'tag ::= LDELSLASH ID modifierlist',
        'tag ::= LDELSLASH ID PTR ID',
        'tag ::= LDELSLASH ID PTR ID modifierlist',
        'attributes ::= attributes attribute',
        'attributes ::= attribute',
        'attributes ::=',
        'attribute ::= SPACE ID EQUAL ID',
        'attribute ::= ATTR expr',
        'attribute ::= ATTR value',
        'attribute ::= SPACE ID',
        'attribute ::= SPACE expr',
        'attribute ::= SPACE value',
        'attribute ::= SPACE INTEGER EQUAL expr',
        'statements ::= statement',
        'statements ::= statements COMMA statement',
        'statement ::= DOLLARID EQUAL INTEGER',
        'statement ::= DOLLARID EQUAL expr',
        'statement ::= varindexed EQUAL expr',
        'statement ::= OPENP statement CLOSEP',
        'expr ::= value',
        'expr ::= ternary',
        'expr ::= DOLLARID COLON ID',
        'expr ::= expr MATH value',
        'expr ::= expr UNIMATH value',
        'expr ::= array',
        'expr ::= expr modifierlist',
        'expr ::= expr tlop value',
        'expr ::= expr lop expr',
        'expr ::= expr scond',
        'expr ::= expr ISIN array',
        'expr ::= expr ISIN value',
        'ternary ::= OPENP expr CLOSEP QMARK DOLLARID COLON expr',
        'ternary ::= OPENP expr CLOSEP QMARK expr COLON expr',
        'value ::= variable',
        'value ::= UNIMATH value',
        'value ::= NOT value',
        'value ::= TYPECAST value',
        'value ::= variable INCDEC',
        'value ::= HEX',
        'value ::= INTEGER',
        'value ::= INTEGER DOT INTEGER',
        'value ::= INTEGER DOT',
        'value ::= DOT INTEGER',
        'value ::= ID',
        'value ::= function',
        'value ::= OPENP expr CLOSEP',
        'value ::= variable INSTANCEOF ns1',
        'value ::= variable INSTANCEOF variable',
        'value ::= SINGLEQUOTESTRING',
        'value ::= doublequoted_with_quotes',
        'value ::= varindexed DOUBLECOLON static_class_access',
        'value ::= smartytag',
        'value ::= value modifierlist',
        'value ::= NAMESPACE',
        'value ::= ns1 DOUBLECOLON static_class_access',
        'ns1 ::= ID',
        'ns1 ::= NAMESPACE',
        'variable ::= DOLLARID',
        'variable ::= varindexed',
        'variable ::= varvar AT ID',
        'variable ::= object',
        'variable ::= HATCH ID HATCH',
        'variable ::= HATCH ID HATCH arrayindex',
        'variable ::= HATCH variable HATCH',
        'variable ::= HATCH variable HATCH arrayindex',
        'varindexed ::= DOLLARID arrayindex',
        'varindexed ::= varvar arrayindex',
        'arrayindex ::= arrayindex indexdef',
        'arrayindex ::=',
        'indexdef ::= DOT DOLLARID',
        'indexdef ::= DOT varvar',
        'indexdef ::= DOT varvar AT ID',
        'indexdef ::= DOT ID',
        'indexdef ::= DOT INTEGER',
        'indexdef ::= DOT LDEL expr RDEL',
        'indexdef ::= OPENB ID CLOSEB',
        'indexdef ::= OPENB ID DOT ID CLOSEB',
        'indexdef ::= OPENB SINGLEQUOTESTRING CLOSEB',
        'indexdef ::= OPENB INTEGER CLOSEB',
        'indexdef ::= OPENB DOLLARID CLOSEB',
        'indexdef ::= OPENB variable CLOSEB',
        'indexdef ::= OPENB value CLOSEB',
        'indexdef ::= OPENB expr CLOSEB',
        'indexdef ::= OPENB CLOSEB',
        'varvar ::= DOLLARID',
        'varvar ::= DOLLAR',
        'varvar ::= varvar varvarele',
        'varvarele ::= ID',
        'varvarele ::= SIMPELOUTPUT',
        'varvarele ::= LDEL expr RDEL',
        'object ::= varindexed objectchain',
        'objectchain ::= objectelement',
        'objectchain ::= objectchain objectelement',
        'objectelement ::= PTR ID arrayindex',
        'objectelement ::= PTR varvar arrayindex',
        'objectelement ::= PTR LDEL expr RDEL arrayindex',
        'objectelement ::= PTR ID LDEL expr RDEL arrayindex',
        'objectelement ::= PTR method',
        'function ::= ns1 OPENP params CLOSEP',
        'method ::= ID OPENP params CLOSEP',
        'method ::= DOLLARID OPENP params CLOSEP',
        'params ::= params COMMA expr',
        'params ::= expr',
        'params ::=',
        'modifierlist ::= modifierlist modifier modparameters',
        'modifierlist ::= modifier modparameters',
        'modifier ::= VERT AT ID',
        'modifier ::= VERT ID',
        'modparameters ::= modparameters modparameter',
        'modparameters ::=',
        'modparameter ::= COLON value',
        'modparameter ::= COLON array',
        'static_class_access ::= method',
        'static_class_access ::= method objectchain',
        'static_class_access ::= ID',
        'static_class_access ::= DOLLARID arrayindex',
        'static_class_access ::= DOLLARID arrayindex objectchain',
        'lop ::= LOGOP',
        'lop ::= SLOGOP',
        'tlop ::= TLOGOP',
        'scond ::= SINGLECOND',
        'array ::= OPENB arrayelements CLOSEB',
        'arrayelements ::= arrayelement',
        'arrayelements ::= arrayelements COMMA arrayelement',
        'arrayelements ::=',
        'arrayelement ::= value APTR expr',
        'arrayelement ::= ID APTR expr',
        'arrayelement ::= expr',
        'doublequoted_with_quotes ::= QUOTE QUOTE',
        'doublequoted_with_quotes ::= QUOTE doublequoted QUOTE',
        'doublequoted ::= doublequoted doublequotedcontent',
        'doublequoted ::= doublequotedcontent',
        'doublequotedcontent ::= BACKTICK variable BACKTICK',
        'doublequotedcontent ::= BACKTICK expr BACKTICK',
        'doublequotedcontent ::= DOLLARID',
        'doublequotedcontent ::= LDEL variable RDEL',
        'doublequotedcontent ::= LDEL expr RDEL',
        'doublequotedcontent ::= smartytag',
        'doublequotedcontent ::= TEXT',
    );
    public static $yyRuleInfo = array(
        array(0 => 62, 1 => 1),
        array(0 => 63, 1 => 2),
        array(0 => 63, 1 => 2),
        array(0 => 63, 1 => 2),
        array(0 => 63, 1 => 2),
        array(0 => 63, 1 => 4),
        array(0 => 64, 1 => 4),
        array(0 => 64, 1 => 1),
        array(0 => 65, 1 => 2),
        array(0 => 65, 1 => 0),
        array(0 => 63, 1 => 2),
        array(0 => 63, 1 => 0),
        array(0 => 66, 1 => 1),
        array(0 => 66, 1 => 1),
        array(0 => 66, 1 => 1),
        array(0 => 66, 1 => 3),
        array(0 => 66, 1 => 2),
        array(0 => 67, 1 => 1),
        array(0 => 67, 1 => 2),
        array(0 => 67, 1 => 2),
        array(0 => 70, 1 => 2),
        array(0 => 69, 1 => 2),
        array(0 => 72, 1 => 1),
        array(0 => 72, 1 => 1),
        array(0 => 72, 1 => 1),
        array(0 => 68, 1 => 3),
        array(0 => 68, 1 => 2),
        array(0 => 68, 1 => 4),
        array(0 => 68, 1 => 5),
        array(0 => 68, 1 => 6),
        array(0 => 68, 1 => 2),
        array(0 => 68, 1 => 2),
        array(0 => 68, 1 => 3),
        array(0 => 68, 1 => 2),
        array(0 => 68, 1 => 3),
        array(0 => 68, 1 => 8),
        array(0 => 80, 1 => 2),
        array(0 => 80, 1 => 1),
        array(0 => 68, 1 => 5),
        array(0 => 68, 1 => 7),
        array(0 => 68, 1 => 6),
        array(0 => 68, 1 => 8),
        array(0 => 68, 1 => 2),
        array(0 => 68, 1 => 3),
        array(0 => 68, 1 => 4),
        array(0 => 66, 1 => 1),
        array(0 => 68, 1 => 2),
        array(0 => 68, 1 => 3),
        array(0 => 68, 1 => 4),
        array(0 => 68, 1 => 5),
        array(0 => 73, 1 => 2),
        array(0 => 73, 1 => 1),
        array(0 => 73, 1 => 0),
        array(0 => 83, 1 => 4),
        array(0 => 83, 1 => 2),
        array(0 => 83, 1 => 2),
        array(0 => 83, 1 => 2),
        array(0 => 83, 1 => 2),
        array(0 => 83, 1 => 2),
        array(0 => 83, 1 => 4),
        array(0 => 79, 1 => 1),
        array(0 => 79, 1 => 3),
        array(0 => 78, 1 => 3),
        array(0 => 78, 1 => 3),
        array(0 => 78, 1 => 3),
        array(0 => 78, 1 => 3),
        array(0 => 76, 1 => 1),
        array(0 => 76, 1 => 1),
        array(0 => 76, 1 => 3),
        array(0 => 76, 1 => 3),
        array(0 => 76, 1 => 3),
        array(0 => 76, 1 => 1),
        array(0 => 76, 1 => 2),
        array(0 => 76, 1 => 3),
        array(0 => 76, 1 => 3),
        array(0 => 76, 1 => 2),
        array(0 => 76, 1 => 3),
        array(0 => 76, 1 => 3),
        array(0 => 84, 1 => 7),
        array(0 => 84, 1 => 7),
        array(0 => 75, 1 => 1),
        array(0 => 75, 1 => 2),
        array(0 => 75, 1 => 2),
        array(0 => 75, 1 => 2),
        array(0 => 75, 1 => 2),
        array(0 => 75, 1 => 1),
        array(0 => 75, 1 => 1),
        array(0 => 75, 1 => 3),
        array(0 => 75, 1 => 2),
        array(0 => 75, 1 => 2),
        array(0 => 75, 1 => 1),
        array(0 => 75, 1 => 1),
        array(0 => 75, 1 => 3),
        array(0 => 75, 1 => 3),
        array(0 => 75, 1 => 3),
        array(0 => 75, 1 => 1),
        array(0 => 75, 1 => 1),
        array(0 => 75, 1 => 3),
        array(0 => 75, 1 => 1),
        array(0 => 75, 1 => 2),
        array(0 => 75, 1 => 1),
        array(0 => 75, 1 => 3),
        array(0 => 90, 1 => 1),
        array(0 => 90, 1 => 1),
        array(0 => 74, 1 => 1),
        array(0 => 74, 1 => 1),
        array(0 => 74, 1 => 3),
        array(0 => 74, 1 => 1),
        array(0 => 74, 1 => 3),
        array(0 => 74, 1 => 4),
        array(0 => 74, 1 => 3),
        array(0 => 74, 1 => 4),
        array(0 => 71, 1 => 2),
        array(0 => 71, 1 => 2),
        array(0 => 94, 1 => 2),
        array(0 => 94, 1 => 0),
        array(0 => 95, 1 => 2),
        array(0 => 95, 1 => 2),
        array(0 => 95, 1 => 4),
        array(0 => 95, 1 => 2),
        array(0 => 95, 1 => 2),
        array(0 => 95, 1 => 4),
        array(0 => 95, 1 => 3),
        array(0 => 95, 1 => 5),
        array(0 => 95, 1 => 3),
        array(0 => 95, 1 => 3),
        array(0 => 95, 1 => 3),
        array(0 => 95, 1 => 3),
        array(0 => 95, 1 => 3),
        array(0 => 95, 1 => 3),
        array(0 => 95, 1 => 2),
        array(0 => 81, 1 => 1),
        array(0 => 81, 1 => 1),
        array(0 => 81, 1 => 2),
        array(0 => 96, 1 => 1),
        array(0 => 96, 1 => 1),
        array(0 => 96, 1 => 3),
        array(0 => 93, 1 => 2),
        array(0 => 97, 1 => 1),
        array(0 => 97, 1 => 2),
        array(0 => 98, 1 => 3),
        array(0 => 98, 1 => 3),
        array(0 => 98, 1 => 5),
        array(0 => 98, 1 => 6),
        array(0 => 98, 1 => 2),
        array(0 => 89, 1 => 4),
        array(0 => 99, 1 => 4),
        array(0 => 99, 1 => 4),
        array(0 => 100, 1 => 3),
        array(0 => 100, 1 => 1),
        array(0 => 100, 1 => 0),
        array(0 => 77, 1 => 3),
        array(0 => 77, 1 => 2),
        array(0 => 101, 1 => 3),
        array(0 => 101, 1 => 2),
        array(0 => 82, 1 => 2),
        array(0 => 82, 1 => 0),
        array(0 => 102, 1 => 2),
        array(0 => 102, 1 => 2),
        array(0 => 92, 1 => 1),
        array(0 => 92, 1 => 2),
        array(0 => 92, 1 => 1),
        array(0 => 92, 1 => 2),
        array(0 => 92, 1 => 3),
        array(0 => 87, 1 => 1),
        array(0 => 87, 1 => 1),
        array(0 => 86, 1 => 1),
        array(0 => 88, 1 => 1),
        array(0 => 85, 1 => 3),
        array(0 => 103, 1 => 1),
        array(0 => 103, 1 => 3),
        array(0 => 103, 1 => 0),
        array(0 => 104, 1 => 3),
        array(0 => 104, 1 => 3),
        array(0 => 104, 1 => 1),
        array(0 => 91, 1 => 2),
        array(0 => 91, 1 => 3),
        array(0 => 105, 1 => 2),
        array(0 => 105, 1 => 1),
        array(0 => 106, 1 => 3),
        array(0 => 106, 1 => 3),
        array(0 => 106, 1 => 1),
        array(0 => 106, 1 => 3),
        array(0 => 106, 1 => 3),
        array(0 => 106, 1 => 1),
        array(0 => 106, 1 => 1),
    );
        public static $yyReduceMap = array(
        0   => 0,
        1   => 1,
        2   => 2,
        3   => 3,
        4   => 4,
        5   => 5,
        6   => 6,
        7   => 7,
        22  => 7,
        23  => 7,
        24  => 7,
        37  => 7,
        57  => 7,
        58  => 7,
        66  => 7,
        67  => 7,
        71  => 7,
        80  => 7,
        85  => 7,
        86  => 7,
        91  => 7,
        95  => 7,
        96  => 7,
        100 => 7,
        102 => 7,
        107 => 7,
        169 => 7,
        174 => 7,
        8   => 8,
        9   => 9,
        10  => 10,
        12  => 12,
        13  => 13,
        14  => 14,
        15  => 15,
        16  => 16,
        17  => 17,
        18  => 18,
        19  => 19,
        20  => 20,
        21  => 21,
        25  => 25,
        26  => 26,
        27  => 27,
        28  => 28,
        29  => 29,
        30  => 30,
        31  => 31,
        32  => 32,
        34  => 32,
        33  => 33,
        35  => 35,
        36  => 36,
        38  => 38,
        39  => 39,
        40  => 40,
        41  => 41,
        42  => 42,
        43  => 43,
        44  => 44,
        45  => 45,
        46  => 46,
        47  => 47,
        48  => 48,
        49  => 49,
        50  => 50,
        51  => 51,
        60  => 51,
        149 => 51,
        153 => 51,
        157 => 51,
        158 => 51,
        52  => 52,
        150 => 52,
        156 => 52,
        53  => 53,
        54  => 54,
        55  => 54,
        56  => 56,
        134 => 56,
        59  => 59,
        61  => 61,
        62  => 62,
        63  => 62,
        64  => 64,
        65  => 65,
        68  => 68,
        69  => 69,
        70  => 69,
        72  => 72,
        99  => 72,
        73  => 73,
        74  => 74,
        75  => 75,
        76  => 76,
        77  => 77,
        78  => 78,
        79  => 79,
        81  => 81,
        83  => 81,
        84  => 81,
        114 => 81,
        82  => 82,
        87  => 87,
        88  => 88,
        89  => 89,
        90  => 90,
        92  => 92,
        93  => 93,
        94  => 93,
        97  => 97,
        98  => 98,
        101 => 101,
        103 => 103,
        104 => 104,
        105 => 105,
        106 => 106,
        108 => 108,
        109 => 109,
        110 => 110,
        111 => 111,
        112 => 112,
        113 => 113,
        115 => 115,
        171 => 115,
        116 => 116,
        117 => 117,
        118 => 118,
        119 => 119,
        120 => 120,
        121 => 121,
        129 => 121,
        122 => 122,
        123 => 123,
        124 => 124,
        125 => 124,
        127 => 124,
        128 => 124,
        126 => 126,
        130 => 130,
        131 => 131,
        132 => 132,
        175 => 132,
        133 => 133,
        135 => 135,
        136 => 136,
        137 => 137,
        138 => 138,
        139 => 139,
        140 => 140,
        141 => 141,
        142 => 142,
        143 => 143,
        144 => 144,
        145 => 145,
        146 => 146,
        147 => 147,
        148 => 148,
        151 => 151,
        152 => 152,
        154 => 154,
        155 => 155,
        159 => 159,
        160 => 160,
        161 => 161,
        162 => 162,
        163 => 163,
        164 => 164,
        165 => 165,
        166 => 166,
        167 => 167,
        168 => 168,
        170 => 170,
        172 => 172,
        173 => 173,
        176 => 176,
        177 => 177,
        178 => 178,
        179 => 179,
        182 => 179,
        180 => 180,
        183 => 180,
        181 => 181,
        184 => 184,
        185 => 185,
    );                    /* Index of top element in stack */
        private $_retvalue;                 /* Shifts left before out of the error */

    /**
     * constructor
     *
     * @param Smarty_Internal_Templatelexer        $lex
     * @param Smarty_Internal_TemplateCompilerBase $compiler
     */
    function __construct(Smarty_Internal_Templatelexer $lex, Smarty_Internal_TemplateCompilerBase $compiler)
    {
        $this->lex = $lex;
        $this->compiler = $compiler;
        $this->template = $this->compiler->template;
        $this->smarty = $this->template->smarty;
        $this->security = isset($this->smarty->security_policy) ? $this->smarty->security_policy : false;
        $this->current_buffer = $this->root_buffer = new Smarty_Internal_ParseTree_Template();
    }  /* The parser's stack */

    /**
     * insert PHP code in current buffer
     *
     * @param string $code
     */
    public function insertPhpCode($code)
    {
        $this->current_buffer->append_subtree($this, new Smarty_Internal_ParseTree_Tag($this, $code));
    }

    /**
     * error rundown
     *
     */
    public function errorRunDown()
    {
        while ($this->yystack !== array()) {
            $this->yy_pop_parser_stack();
        }
        if (is_resource($this->yyTraceFILE)) {
            fclose($this->yyTraceFILE);
        }
    }

    /**
     *  merge PHP code with prefix code and return parse tree tag object
     *
     * @param string $code
     *
     * @return Smarty_Internal_ParseTree_Tag
     */
    public function mergePrefixCode($code)
    {
        $tmp = '';
        foreach ($this->compiler->prefix_code as $preCode) {
            $tmp .= $preCode;
        }
        $this->compiler->prefix_code = array();
        $tmp .= $code;
        return new Smarty_Internal_ParseTree_Tag($this, $this->compiler->processNocacheCode($tmp, true));
    }

    public function Trace($TraceFILE, $zTracePrompt)
    {
        if (!$TraceFILE) {
            $zTracePrompt = 0;
        } else if (!$zTracePrompt) {
            $TraceFILE = 0;
        }
        $this->yyTraceFILE = $TraceFILE;
        $this->yyTracePrompt = $zTracePrompt;
    }

    public function PrintTrace()
    {
        $this->yyTraceFILE = fopen('php://output', 'w');
        $this->yyTracePrompt = '<br>';
    }

    public function tokenName($tokenType)
    {
        if ($tokenType === 0) {
            return 'End of Input';
        }
        if ($tokenType > 0 && $tokenType < count($this->yyTokenName)) {
            return $this->yyTokenName[ $tokenType ];
        } else {
            return 'Unknown';
        }
    }

    public static function yy_destructor($yymajor, $yypminor)
    {
        switch ($yymajor) {
            default:
                break;   /* If no destructor action specified: do nothing */
        }
    }

    public function yy_pop_parser_stack()
    {
        if (empty($this->yystack)) {
            return;
        }
        $yytos = array_pop($this->yystack);
        if ($this->yyTraceFILE && $this->yyidx >= 0) {
            fwrite($this->yyTraceFILE,
                   $this->yyTracePrompt . 'Popping ' . $this->yyTokenName[ $yytos->major ] .
                   "\n");
        }
        $yymajor = $yytos->major;
        self::yy_destructor($yymajor, $yytos->minor);
        $this->yyidx--;
        return $yymajor;
    }

    public function __destruct()
    {
        while ($this->yystack !== Array()) {
            $this->yy_pop_parser_stack();
        }
        if (is_resource($this->yyTraceFILE)) {
            fclose($this->yyTraceFILE);
        }
    }

    public function yy_get_expected_tokens($token)
    {
        static $res3 = array();
        static $res4 = array();
        $state = $this->yystack[ $this->yyidx ]->stateno;
        $expected = self::$yyExpectedTokens[ $state ];
        if (isset($res3[ $state ][ $token ])) {
            if ($res3[ $state ][ $token ]) {
                return $expected;
            }
        } else {
            if ($res3[ $state ][ $token ] = in_array($token, self::$yyExpectedTokens[ $state ], true)) {
                return $expected;
            }
        }
        $stack = $this->yystack;
        $yyidx = $this->yyidx;
        do {
            $yyact = $this->yy_find_shift_action($token);
            if ($yyact >= self::YYNSTATE && $yyact < self::YYNSTATE + self::YYNRULE) {
                // reduce action
                $done = 0;
                do {
                    if ($done++ === 100) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // too much recursion prevents proper detection
                        // so give up
                        return array_unique($expected);
                    }
                    $yyruleno = $yyact - self::YYNSTATE;
                    $this->yyidx -= self::$yyRuleInfo[ $yyruleno ][ 1 ];
                    $nextstate = $this->yy_find_reduce_action(
                        $this->yystack[ $this->yyidx ]->stateno,
                        self::$yyRuleInfo[ $yyruleno ][ 0 ]);
                    if (isset(self::$yyExpectedTokens[ $nextstate ])) {
                        $expected = array_merge($expected, self::$yyExpectedTokens[ $nextstate ]);
                        if (isset($res4[ $nextstate ][ $token ])) {
                            if ($res4[ $nextstate ][ $token ]) {
                                $this->yyidx = $yyidx;
                                $this->yystack = $stack;
                                return array_unique($expected);
                            }
                        } else {
                            if ($res4[ $nextstate ][ $token ] =
                                in_array($token, self::$yyExpectedTokens[ $nextstate ], true)) {
                                $this->yyidx = $yyidx;
                                $this->yystack = $stack;
                                return array_unique($expected);
                            }
                        }
                    }
                    if ($nextstate < self::YYNSTATE) {
                        // we need to shift a non-terminal
                        $this->yyidx++;
                        $x = new TP_yyStackEntry;
                        $x->stateno = $nextstate;
                        $x->major = self::$yyRuleInfo[ $yyruleno ][ 0 ];
                        $this->yystack[ $this->yyidx ] = $x;
                        continue 2;
                    } else if ($nextstate === self::YYNSTATE + self::YYNRULE + 1) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // the last token was just ignored, we can't accept
                        // by ignoring input, this is in essence ignoring a
                        // syntax error!
                        return array_unique($expected);
                    } else if ($nextstate === self::YY_NO_ACTION) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // input accepted, but not shifted (I guess)
                        return $expected;
                    } else {
                        $yyact = $nextstate;
                    }
                } while (true);
            }
            break;
        } while (true);
        $this->yyidx = $yyidx;
        $this->yystack = $stack;
        return array_unique($expected);
    }

    public function yy_is_expected_token($token)
    {
        static $res = array();
        static $res2 = array();
        if ($token === 0) {
            return true; // 0 is not part of this
        }
        $state = $this->yystack[ $this->yyidx ]->stateno;
        if (isset($res[ $state ][ $token ])) {
            if ($res[ $state ][ $token ]) {
                return true;
            }
        } else {
            if ($res[ $state ][ $token ] = in_array($token, self::$yyExpectedTokens[ $state ], true)) {
                return true;
            }
        }
        $stack = $this->yystack;
        $yyidx = $this->yyidx;
        do {
            $yyact = $this->yy_find_shift_action($token);
            if ($yyact >= self::YYNSTATE && $yyact < self::YYNSTATE + self::YYNRULE) {
                // reduce action
                $done = 0;
                do {
                    if ($done++ === 100) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // too much recursion prevents proper detection
                        // so give up
                        return true;
                    }
                    $yyruleno = $yyact - self::YYNSTATE;
                    $this->yyidx -= self::$yyRuleInfo[ $yyruleno ][ 1 ];
                    $nextstate = $this->yy_find_reduce_action(
                        $this->yystack[ $this->yyidx ]->stateno,
                        self::$yyRuleInfo[ $yyruleno ][ 0 ]);
                    if (isset($res2[ $nextstate ][ $token ])) {
                        if ($res2[ $nextstate ][ $token ]) {
                            $this->yyidx = $yyidx;
                            $this->yystack = $stack;
                            return true;
                        }
                    } else {
                        if ($res2[ $nextstate ][ $token ] = (isset(self::$yyExpectedTokens[ $nextstate ]) &&
                                                             in_array($token,
                                                                      self::$yyExpectedTokens[ $nextstate ],
                                                                      true))) {
                            $this->yyidx = $yyidx;
                            $this->yystack = $stack;
                            return true;
                        }
                    }
                    if ($nextstate < self::YYNSTATE) {
                        // we need to shift a non-terminal
                        $this->yyidx++;
                        $x = new TP_yyStackEntry;
                        $x->stateno = $nextstate;
                        $x->major = self::$yyRuleInfo[ $yyruleno ][ 0 ];
                        $this->yystack[ $this->yyidx ] = $x;
                        continue 2;
                    } else if ($nextstate === self::YYNSTATE + self::YYNRULE + 1) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        if (!$token) {
                            // end of input: this is valid
                            return true;
                        }
                        // the last token was just ignored, we can't accept
                        // by ignoring input, this is in essence ignoring a
                        // syntax error!
                        return false;
                    } else if ($nextstate === self::YY_NO_ACTION) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // input accepted, but not shifted (I guess)
                        return true;
                    } else {
                        $yyact = $nextstate;
                    }
                } while (true);
            }
            break;
        } while (true);
        $this->yyidx = $yyidx;
        $this->yystack = $stack;
        return true;
    }

    public function yy_find_shift_action($iLookAhead)
    {
        $stateno = $this->yystack[ $this->yyidx ]->stateno;
        /* if ($this->yyidx < 0) return self::YY_NO_ACTION;  */
        if (!isset(self::$yy_shift_ofst[ $stateno ])) {
            // no shift actions
            return self::$yy_default[ $stateno ];
        }
        $i = self::$yy_shift_ofst[ $stateno ];
        if ($i === self::YY_SHIFT_USE_DFLT) {
            return self::$yy_default[ $stateno ];
        }
        if ($iLookAhead === self::YYNOCODE) {
            return self::YY_NO_ACTION;
        }
        $i += $iLookAhead;
        if ($i < 0 || $i >= self::YY_SZ_ACTTAB ||
            self::$yy_lookahead[ $i ] != $iLookAhead) {
            if (count(self::$yyFallback) && $iLookAhead < count(self::$yyFallback)
                && ($iFallback = self::$yyFallback[ $iLookAhead ]) != 0) {
                if ($this->yyTraceFILE) {
                    fwrite($this->yyTraceFILE,
                           $this->yyTracePrompt . 'FALLBACK ' .
                           $this->yyTokenName[ $iLookAhead ] . ' => ' .
                           $this->yyTokenName[ $iFallback ] . "\n");
                }
                return $this->yy_find_shift_action($iFallback);
            }
            return self::$yy_default[ $stateno ];
        } else {
            return self::$yy_action[ $i ];
        }
    }

    public function yy_find_reduce_action($stateno, $iLookAhead)
    {
        /* $stateno = $this->yystack[$this->yyidx]->stateno; */
        if (!isset(self::$yy_reduce_ofst[ $stateno ])) {
            return self::$yy_default[ $stateno ];
        }
        $i = self::$yy_reduce_ofst[ $stateno ];
        if ($i === self::YY_REDUCE_USE_DFLT) {
            return self::$yy_default[ $stateno ];
        }
        if ($iLookAhead === self::YYNOCODE) {
            return self::YY_NO_ACTION;
        }
        $i += $iLookAhead;
        if ($i < 0 || $i >= self::YY_SZ_ACTTAB ||
            self::$yy_lookahead[ $i ] != $iLookAhead) {
            return self::$yy_default[ $stateno ];
        } else {
            return self::$yy_action[ $i ];
        }
    }

    #line 234 "../smarty/lexer/smarty_internal_templateparser.y"

    public function yy_shift($yyNewState, $yyMajor, $yypMinor)
    {
        $this->yyidx++;
        if ($this->yyidx >= self::YYSTACKDEPTH) {
            $this->yyidx--;
            if ($this->yyTraceFILE) {
                fprintf($this->yyTraceFILE, "%sStack Overflow!\n", $this->yyTracePrompt);
            }
            while ($this->yyidx >= 0) {
                $this->yy_pop_parser_stack();
            }
            #line 221 "../smarty/lexer/smarty_internal_templateparser.y"
            $this->internalError = true;
            $this->compiler->trigger_template_error('Stack overflow in template parser');
            return;
        }
        $yytos = new TP_yyStackEntry;
        $yytos->stateno = $yyNewState;
        $yytos->major = $yyMajor;
        $yytos->minor = $yypMinor;
        $this->yystack[] = $yytos;
        if ($this->yyTraceFILE && $this->yyidx > 0) {
            fprintf($this->yyTraceFILE,
                    "%sShift %d\n",
                    $this->yyTracePrompt,
                    $yyNewState);
            fprintf($this->yyTraceFILE, "%sStack:", $this->yyTracePrompt);
            for ($i = 1; $i <= $this->yyidx; $i++) {
                fprintf($this->yyTraceFILE,
                        " %s",
                        $this->yyTokenName[ $this->yystack[ $i ]->major ]);
            }
            fwrite($this->yyTraceFILE, "\n");
        }
    }

    #line 242 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r0()
    {
        $this->root_buffer->prepend_array($this, $this->template_prefix);
        $this->root_buffer->append_array($this, $this->template_postfix);
        $this->_retvalue = $this->root_buffer->to_smarty_php($this);
    }

    #line 251 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r1()
    {
        $code = $this->compiler->compileTag('private_php',
                                            array(array('code' => $this->yystack[ $this->yyidx + 0 ]->minor),
                                                  array('type' => $this->lex->phpType)),
                                            array());
        if ($this->compiler->has_code && !empty($code)) {
            $tmp = '';
            foreach ($this->compiler->prefix_code as $code) {
                $tmp .= $code;
            }
            $this->compiler->prefix_code = array();
            $this->current_buffer->append_subtree($this,
                                                  new Smarty_Internal_ParseTree_Tag($this,
                                                                                    $this->compiler->processNocacheCode($tmp .
                                                                                                                        $code,
                                                                                                                        true)));
        }
    }

    #line 255 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r2()
    {
        $this->current_buffer->append_subtree($this,
                                              $this->compiler->processText($this->yystack[ $this->yyidx + 0 ]->minor));
    }

    #line 259 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r3()
    {
        $this->strip = true;
    }

    #line 264 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r4()
    {
        $this->strip = false;
    }

    #line 269 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r5()
    {
        $this->current_buffer->append_subtree($this,
                                              new Smarty_Internal_ParseTree_Text($this->yystack[ $this->yyidx +
                                                                                                 -1 ]->minor));
    }

    #line 272 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r6()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + -3 ]->minor . $this->yystack[ $this->yyidx + -1 ]->minor;
    }

    #line 276 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r7()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 281 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r8()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + -1 ]->minor . $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 285 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r9()
    {
        $this->_retvalue = '';
    }

    #line 297 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r10()
    {
        if ($this->compiler->has_code) {
            $this->current_buffer->append_subtree($this,
                                                  $this->mergePrefixCode($this->yystack[ $this->yyidx + 0 ]->minor));
        }
        $this->compiler->has_variable_string = false;
        $this->block_nesting_level = count($this->compiler->_tag_stack);
    }

    #line 307 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r12()
    {
        $var = trim(substr($this->yystack[ $this->yyidx + 0 ]->minor,
                           $this->compiler->getLdelLength(),
                           -$this->compiler->getRdelLength()),
                    ' $');
        if (preg_match('/^(.*)(\s+nocache)$/', $var, $match)) {
            $this->_retvalue = $this->compiler->compileTag('private_print_expression',
                                                           array('nocache'),
                                                           array('value' => $this->compiler->compileVariable('\'' .
                                                                                                             $match[ 1 ] .
                                                                                                             '\'')));
        } else {
            $this->_retvalue = $this->compiler->compileTag('private_print_expression',
                                                           array(),
                                                           array('value' => $this->compiler->compileVariable('\'' .
                                                                                                             $var .
                                                                                                             '\'')));
        }
    }

    #line 328 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r13()
    {
        $tag = trim(substr($this->yystack[ $this->yyidx + 0 ]->minor,
                           $this->compiler->getLdelLength(),
                           -$this->compiler->getRdelLength()));
        if ($tag == 'strip') {
            $this->strip = true;
            $this->_retvalue = null;;
        } else {
            if (defined($tag)) {
                if ($this->security) {
                    $this->security->isTrustedConstant($tag, $this->compiler);
                }
                $this->_retvalue =
                    $this->compiler->compileTag('private_print_expression', array(), array('value' => $tag));
            } else {
                if (preg_match('/^(.*)(\s+nocache)$/', $tag, $match)) {
                    $this->_retvalue = $this->compiler->compileTag($match[ 1 ], array('\'nocache\''));
                } else {
                    $this->_retvalue = $this->compiler->compileTag($tag, array());
                }
            }
        }
    }

    #line 339 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r14()
    {
        $j = strrpos($this->yystack[ $this->yyidx + 0 ]->minor, '.');
        if ($this->yystack[ $this->yyidx + 0 ]->minor[ $j + 1 ] == 'c') {
            // {$smarty.block.child}
            $this->_retvalue =
                $this->compiler->compileTag('child', array(), array($this->yystack[ $this->yyidx + 0 ]->minor));;
        } else {
            // {$smarty.block.parent}
            $this->_retvalue =
                $this->compiler->compileTag('parent', array(), array($this->yystack[ $this->yyidx + 0 ]->minor));;
        }
    }

    #line 343 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r15()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + -1 ]->minor;
    }

    #line 347 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r16()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + -1 ]->minor;
    }

    #line 356 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r17()
    {
        $this->_retvalue = $this->compiler->compileTag('private_print_expression',
                                                       $this->yystack[ $this->yyidx + 0 ]->minor[ 1 ],
                                                       array('value' => $this->yystack[ $this->yyidx +
                                                                                        0 ]->minor[ 0 ]));
    }

    #line 360 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r18()
    {
        $this->_retvalue = $this->compiler->compileTag('assign',
                                                       array_merge(array(array('value' => $this->yystack[ $this->yyidx +
                                                                                                          0 ]->minor[ 0 ]),
                                                                         array('var' => '\'' .
                                                                                        substr($this->yystack[ $this->yyidx +
                                                                                                               -1 ]->minor,
                                                                                               1) . '\'')),
                                                                   $this->yystack[ $this->yyidx + 0 ]->minor[ 1 ]));
    }

    #line 364 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r19()
    {
        $this->_retvalue = $this->compiler->compileTag('assign',
                                                       array_merge(array(array('value' => $this->yystack[ $this->yyidx +
                                                                                                          0 ]->minor[ 0 ]),
                                                                         array('var' => $this->yystack[ $this->yyidx +
                                                                                                        -1 ]->minor[ 'var' ])),
                                                                   $this->yystack[ $this->yyidx + 0 ]->minor[ 1 ]),
                                                       array('smarty_internal_index' => $this->yystack[ $this->yyidx +
                                                                                                        -1 ]->minor[ 'smarty_internal_index' ]));
    }

    #line 368 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r20()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 383 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r21()
    {
        $this->_retvalue = array($this->yystack[ $this->yyidx + -1 ]->minor, $this->yystack[ $this->yyidx + 0 ]->minor);
    }

    #line 393 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r25()
    {
        if (defined($this->yystack[ $this->yyidx + -1 ]->minor)) {
            if ($this->security) {
                $this->security->isTrustedConstant($this->yystack[ $this->yyidx + -1 ]->minor, $this->compiler);
            }
            $this->_retvalue = $this->compiler->compileTag('private_print_expression',
                                                           $this->yystack[ $this->yyidx + 0 ]->minor,
                                                           array('value' => $this->yystack[ $this->yyidx +
                                                                                            -1 ]->minor));
        } else {
            $this->_retvalue = $this->compiler->compileTag($this->yystack[ $this->yyidx + -1 ]->minor,
                                                           $this->yystack[ $this->yyidx + 0 ]->minor);
        }
    }

    #line 406 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r26()
    {
        if (defined($this->yystack[ $this->yyidx + 0 ]->minor)) {
            if ($this->security) {
                $this->security->isTrustedConstant($this->yystack[ $this->yyidx + 0 ]->minor, $this->compiler);
            }
            $this->_retvalue = $this->compiler->compileTag('private_print_expression',
                                                           array(),
                                                           array('value' => $this->yystack[ $this->yyidx + 0 ]->minor));
        } else {
            $this->_retvalue = $this->compiler->compileTag($this->yystack[ $this->yyidx + 0 ]->minor, array());
        }
    }

    #line 418 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r27()
    {
        if (defined($this->yystack[ $this->yyidx + -2 ]->minor)) {
            if ($this->security) {
                $this->security->isTrustedConstant($this->yystack[ $this->yyidx + -2 ]->minor, $this->compiler);
            }
            $this->_retvalue = $this->compiler->compileTag('private_print_expression',
                                                           $this->yystack[ $this->yyidx + 0 ]->minor,
                                                           array('value'        => $this->yystack[ $this->yyidx +
                                                                                                   -2 ]->minor,
                                                                 'modifierlist' => $this->yystack[ $this->yyidx +
                                                                                                   -1 ]->minor));
        } else {
            $this->_retvalue = $this->compiler->compileTag($this->yystack[ $this->yyidx + -2 ]->minor,
                                                           $this->yystack[ $this->yyidx + 0 ]->minor,
                                                           array('modifierlist' => $this->yystack[ $this->yyidx +
                                                                                                   -1 ]->minor));
        }
    }

    #line 423 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r28()
    {
        $this->_retvalue = $this->compiler->compileTag($this->yystack[ $this->yyidx + -3 ]->minor,
                                                       $this->yystack[ $this->yyidx + 0 ]->minor,
                                                       array('object_method' => $this->yystack[ $this->yyidx +
                                                                                                -1 ]->minor));
    }

    #line 428 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r29()
    {
        $this->_retvalue = $this->compiler->compileTag($this->yystack[ $this->yyidx + -4 ]->minor,
                                                       $this->yystack[ $this->yyidx + 0 ]->minor,
                                                       array('modifierlist'  => $this->yystack[ $this->yyidx +
                                                                                                -1 ]->minor,
                                                             'object_method' => $this->yystack[ $this->yyidx +
                                                                                                -2 ]->minor));
    }

    #line 433 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r30()
    {
        $this->_retvalue = $this->compiler->compileTag('make_nocache',
                                                       array(array('var' => '\'' . substr($this->yystack[ $this->yyidx +
                                                                                                          0 ]->minor,
                                                                                          1) . '\'')));
    }

    #line 438 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r31()
    {
        $tag = trim(substr($this->yystack[ $this->yyidx + -1 ]->minor, $this->compiler->getLdelLength()));
        $this->_retvalue = $this->compiler->compileTag(($tag === 'else if') ? 'elseif' : $tag,
                                                       array(),
                                                       array('if condition' => $this->yystack[ $this->yyidx +
                                                                                               0 ]->minor));
    }

    #line 443 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r32()
    {
        $tag = trim(substr($this->yystack[ $this->yyidx + -2 ]->minor, $this->compiler->getLdelLength()));
        $this->_retvalue = $this->compiler->compileTag(($tag === 'else if') ? 'elseif' : $tag,
                                                       $this->yystack[ $this->yyidx + 0 ]->minor,
                                                       array('if condition' => $this->yystack[ $this->yyidx +
                                                                                               -1 ]->minor));
    }

    #line 454 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r33()
    {
        $tag = trim(substr($this->yystack[ $this->yyidx + -1 ]->minor, $this->compiler->getLdelLength()));
        $this->_retvalue = $this->compiler->compileTag(($tag === 'else if') ? 'elseif' : $tag,
                                                       array(),
                                                       array('if condition' => $this->yystack[ $this->yyidx +
                                                                                               0 ]->minor));
    }

    #line 458 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r35()
    {
        $this->_retvalue = $this->compiler->compileTag('for',
                                                       array_merge($this->yystack[ $this->yyidx + 0 ]->minor,
                                                                   array(array('start' => $this->yystack[ $this->yyidx +
                                                                                                          -6 ]->minor),
                                                                         array('ifexp' => $this->yystack[ $this->yyidx +
                                                                                                          -4 ]->minor),
                                                                         array('var' => $this->yystack[ $this->yyidx +
                                                                                                        -2 ]->minor),
                                                                         array('step' => $this->yystack[ $this->yyidx +
                                                                                                         -1 ]->minor))),
                                                       1);
    }

    #line 466 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r36()
    {
        $this->_retvalue = '=' . $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 470 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r38()
    {
        $this->_retvalue = $this->compiler->compileTag('for',
                                                       array_merge($this->yystack[ $this->yyidx + 0 ]->minor,
                                                                   array(array('start' => $this->yystack[ $this->yyidx +
                                                                                                          -3 ]->minor),
                                                                         array('to' => $this->yystack[ $this->yyidx +
                                                                                                       -1 ]->minor))),
                                                       0);
    }

    #line 475 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r39()
    {
        $this->_retvalue = $this->compiler->compileTag('for',
                                                       array_merge($this->yystack[ $this->yyidx + 0 ]->minor,
                                                                   array(array('start' => $this->yystack[ $this->yyidx +
                                                                                                          -5 ]->minor),
                                                                         array('to' => $this->yystack[ $this->yyidx +
                                                                                                       -3 ]->minor),
                                                                         array('step' => $this->yystack[ $this->yyidx +
                                                                                                         -1 ]->minor))),
                                                       0);
    }

    #line 479 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r40()
    {
        $this->_retvalue = $this->compiler->compileTag('foreach',
                                                       array_merge($this->yystack[ $this->yyidx + 0 ]->minor,
                                                                   array(array('from' => $this->yystack[ $this->yyidx +
                                                                                                         -3 ]->minor),
                                                                         array('item' => $this->yystack[ $this->yyidx +
                                                                                                         -1 ]->minor))));
    }

    #line 482 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r41()
    {
        $this->_retvalue = $this->compiler->compileTag('foreach',
                                                       array_merge($this->yystack[ $this->yyidx + 0 ]->minor,
                                                                   array(array('from' => $this->yystack[ $this->yyidx +
                                                                                                         -5 ]->minor),
                                                                         array('item' => $this->yystack[ $this->yyidx +
                                                                                                         -1 ]->minor),
                                                                         array('key' => $this->yystack[ $this->yyidx +
                                                                                                        -3 ]->minor))));
    }

    #line 487 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r42()
    {
        $this->_retvalue = $this->compiler->compileTag('foreach', $this->yystack[ $this->yyidx + 0 ]->minor);
    }

    #line 491 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r43()
    {
        $this->_retvalue = $this->compiler->compileTag('setfilter',
                                                       array(),
                                                       array('modifier_list' => array(array_merge(array($this->yystack[ $this->yyidx +
                                                                                                                        -1 ]->minor),
                                                                                                  $this->yystack[ $this->yyidx +
                                                                                                                  0 ]->minor))));
    }

    #line 497 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r44()
    {
        $this->_retvalue = $this->compiler->compileTag('setfilter',
                                                       array(),
                                                       array('modifier_list' => array_merge(array(array_merge(array($this->yystack[ $this->yyidx +
                                                                                                                                    -2 ]->minor),
                                                                                                              $this->yystack[ $this->yyidx +
                                                                                                                              -1 ]->minor)),
                                                                                            $this->yystack[ $this->yyidx +
                                                                                                            0 ]->minor)));
    }

    #line 506 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r45()
    {
        $tag = trim(substr($this->yystack[ $this->yyidx + 0 ]->minor,
                           $this->compiler->getLdelLength(),
                           -$this->compiler->getRdelLength()),
                    ' /');
        if ($tag === 'strip') {
            $this->strip = false;
            $this->_retvalue = null;
        } else {
            $this->_retvalue = $this->compiler->compileTag($tag . 'close', array());
        }
    }

    #line 510 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r46()
    {
        $this->_retvalue = $this->compiler->compileTag($this->yystack[ $this->yyidx + 0 ]->minor . 'close', array());
    }

    #line 515 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r47()
    {
        $this->_retvalue = $this->compiler->compileTag($this->yystack[ $this->yyidx + -1 ]->minor . 'close',
                                                       array(),
                                                       array('modifier_list' => $this->yystack[ $this->yyidx +
                                                                                                0 ]->minor));
    }

    #line 519 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r48()
    {
        $this->_retvalue = $this->compiler->compileTag($this->yystack[ $this->yyidx + -2 ]->minor . 'close',
                                                       array(),
                                                       array('object_method' => $this->yystack[ $this->yyidx +
                                                                                                0 ]->minor));
    }

    #line 527 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r49()
    {
        $this->_retvalue = $this->compiler->compileTag($this->yystack[ $this->yyidx + -3 ]->minor . 'close',
                                                       array(),
                                                       array('object_method' => $this->yystack[ $this->yyidx +
                                                                                                -1 ]->minor,
                                                             'modifier_list' => $this->yystack[ $this->yyidx +
                                                                                                0 ]->minor));
    }

    #line 533 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r50()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + -1 ]->minor;
        $this->_retvalue[] = $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 538 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r51()
    {
        $this->_retvalue = array($this->yystack[ $this->yyidx + 0 ]->minor);
    }

    #line 543 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r52()
    {
        $this->_retvalue = array();
    }

    #line 554 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r53()
    {
        if (defined($this->yystack[ $this->yyidx + 0 ]->minor)) {
            if ($this->security) {
                $this->security->isTrustedConstant($this->yystack[ $this->yyidx + 0 ]->minor, $this->compiler);
            }
            $this->_retvalue =
                array($this->yystack[ $this->yyidx + -2 ]->minor => $this->yystack[ $this->yyidx + 0 ]->minor);
        } else {
            $this->_retvalue =
                array($this->yystack[ $this->yyidx + -2 ]->minor => '\'' . $this->yystack[ $this->yyidx + 0 ]->minor .
                                                                    '\'');
        }
    }

    #line 562 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r54()
    {
        $this->_retvalue =
            array(trim($this->yystack[ $this->yyidx + -1 ]->minor, " =\n\r\t") => $this->yystack[ $this->yyidx +
                                                                                                  0 ]->minor);
    }

    #line 574 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r56()
    {
        $this->_retvalue = '\'' . $this->yystack[ $this->yyidx + 0 ]->minor . '\'';
    }

    #line 587 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r59()
    {
        $this->_retvalue =
            array($this->yystack[ $this->yyidx + -2 ]->minor => $this->yystack[ $this->yyidx + 0 ]->minor);
    }

    #line 592 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r61()
    {
        $this->yystack[ $this->yyidx + -2 ]->minor[] = $this->yystack[ $this->yyidx + 0 ]->minor;
        $this->_retvalue = $this->yystack[ $this->yyidx + -2 ]->minor;
    }

    #line 599 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r62()
    {
        $this->_retvalue = array('var'   => '\'' . substr($this->yystack[ $this->yyidx + -2 ]->minor, 1) . '\'',
                                 'value' => $this->yystack[ $this->yyidx + 0 ]->minor);
    }

    #line 603 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r64()
    {
        $this->_retvalue = array('var'   => $this->yystack[ $this->yyidx + -2 ]->minor,
                                 'value' => $this->yystack[ $this->yyidx + 0 ]->minor);
    }

    #line 623 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r65()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + -1 ]->minor;
    }

    #line 628 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r68()
    {
        $this->_retvalue =
            '$_smarty_tpl->getStreamVariable(\'' . substr($this->yystack[ $this->yyidx + -2 ]->minor, 1) . '://' .
            $this->yystack[ $this->yyidx + 0 ]->minor . '\')';
    }

    #line 642 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r69()
    {
        $this->_retvalue =
            $this->yystack[ $this->yyidx + -2 ]->minor . trim($this->yystack[ $this->yyidx + -1 ]->minor) .
            $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 648 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r72()
    {
        $this->_retvalue = $this->compiler->compileTag('private_modifier',
                                                       array(),
                                                       array('value'        => $this->yystack[ $this->yyidx +
                                                                                               -1 ]->minor,
                                                             'modifierlist' => $this->yystack[ $this->yyidx +
                                                                                               0 ]->minor));
    }

    #line 652 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r73()
    {
        $this->_retvalue =
            $this->yystack[ $this->yyidx + -1 ]->minor[ 'pre' ] . $this->yystack[ $this->yyidx + -2 ]->minor .
            $this->yystack[ $this->yyidx + -1 ]->minor[ 'op' ] . $this->yystack[ $this->yyidx + 0 ]->minor . ')';
    }

    #line 656 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r74()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + -2 ]->minor . $this->yystack[ $this->yyidx + -1 ]->minor .
                           $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 660 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r75()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + 0 ]->minor . $this->yystack[ $this->yyidx + -1 ]->minor . ')';
    }

    #line 664 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r76()
    {
        $this->_retvalue =
            'in_array(' . $this->yystack[ $this->yyidx + -2 ]->minor . ',' . $this->yystack[ $this->yyidx + 0 ]->minor .
            ')';
    }

    #line 672 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r77()
    {
        $this->_retvalue = 'in_array(' . $this->yystack[ $this->yyidx + -2 ]->minor . ',(array)' .
                           $this->yystack[ $this->yyidx + 0 ]->minor . ')';
    }

    #line 676 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r78()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + -5 ]->minor . ' ? ' . $this->compiler->compileVariable('\'' .
                                                                                                                 substr($this->yystack[ $this->yyidx +
                                                                                                                                        -2 ]->minor,
                                                                                                                        1) .
                                                                                                                 '\'') .
                           ' : ' . $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 686 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r79()
    {
        $this->_retvalue =
            $this->yystack[ $this->yyidx + -5 ]->minor . ' ? ' . $this->yystack[ $this->yyidx + -2 ]->minor . ' : ' .
            $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 691 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r81()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + -1 ]->minor . $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 712 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r82()
    {
        $this->_retvalue = '!' . $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 716 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r87()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + -2 ]->minor . '.' . $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 720 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r88()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + -1 ]->minor . '.';
    }

    #line 725 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r89()
    {
        $this->_retvalue = '.' . $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 742 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r90()
    {
        if (defined($this->yystack[ $this->yyidx + 0 ]->minor)) {
            if ($this->security) {
                $this->security->isTrustedConstant($this->yystack[ $this->yyidx + 0 ]->minor, $this->compiler);
            }
            $this->_retvalue = $this->yystack[ $this->yyidx + 0 ]->minor;
        } else {
            $this->_retvalue = '\'' . $this->yystack[ $this->yyidx + 0 ]->minor . '\'';
        }
    }

    #line 746 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r92()
    {
        $this->_retvalue = '(' . $this->yystack[ $this->yyidx + -1 ]->minor . ')';
    }

    #line 764 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r93()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + -2 ]->minor . $this->yystack[ $this->yyidx + -1 ]->minor .
                           $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 775 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r97()
    {
        $prefixVar = $this->compiler->getNewPrefixVariable();
        if ($this->yystack[ $this->yyidx + -2 ]->minor[ 'var' ] === '\'smarty\'') {
            $this->compiler->appendPrefixCode("<?php {$prefixVar} = " .
                                              $this->compiler->compileTag('private_special_variable',
                                                                          array(),
                                                                          $this->yystack[ $this->yyidx +
                                                                                          -2 ]->minor[ 'smarty_internal_index' ]) .
                                              ';?>');
        } else {
            $this->compiler->appendPrefixCode("<?php  {$prefixVar} = " .
                                              $this->compiler->compileVariable($this->yystack[ $this->yyidx +
                                                                                               -2 ]->minor[ 'var' ]) .
                                              $this->yystack[ $this->yyidx + -2 ]->minor[ 'smarty_internal_index' ] .
                                              ';?>');
        }
        $this->_retvalue = $prefixVar . '::' . $this->yystack[ $this->yyidx + 0 ]->minor[ 0 ] .
                           $this->yystack[ $this->yyidx + 0 ]->minor[ 1 ];
    }

    #line 792 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r98()
    {
        $prefixVar = $this->compiler->getNewPrefixVariable();
        $tmp = $this->compiler->appendCode('<?php ob_start();?>', $this->yystack[ $this->yyidx + 0 ]->minor);
        $this->compiler->appendPrefixCode($this->compiler->appendCode($tmp, "<?php {$prefixVar} = ob_get_clean();?>"));
        $this->_retvalue = $prefixVar;
    }

    #line 811 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r101()
    {
        if (!in_array(strtolower($this->yystack[ $this->yyidx + -2 ]->minor), array('self', 'parent')) &&
            (!$this->security || $this->security->isTrustedStaticClassAccess($this->yystack[ $this->yyidx + -2 ]->minor,
                                                                             $this->yystack[ $this->yyidx + 0 ]->minor,
                                                                             $this->compiler))) {
            if (isset($this->smarty->registered_classes[ $this->yystack[ $this->yyidx + -2 ]->minor ])) {
                $this->_retvalue =
                    $this->smarty->registered_classes[ $this->yystack[ $this->yyidx + -2 ]->minor ] . '::' .
                    $this->yystack[ $this->yyidx + 0 ]->minor[ 0 ] . $this->yystack[ $this->yyidx + 0 ]->minor[ 1 ];
            } else {
                $this->_retvalue =
                    $this->yystack[ $this->yyidx + -2 ]->minor . '::' . $this->yystack[ $this->yyidx + 0 ]->minor[ 0 ] .
                    $this->yystack[ $this->yyidx + 0 ]->minor[ 1 ];
            }
        } else {
            $this->compiler->trigger_template_error('static class \'' . $this->yystack[ $this->yyidx + -2 ]->minor .
                                                    '\' is undefined or not allowed by security setting');
        }
    }

    #line 822 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r103()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 825 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r104()
    {
        $this->_retvalue =
            $this->compiler->compileVariable('\'' . substr($this->yystack[ $this->yyidx + 0 ]->minor, 1) . '\'');
    }

    #line 838 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r105()
    {
        if ($this->yystack[ $this->yyidx + 0 ]->minor[ 'var' ] === '\'smarty\'') {
            $smarty_var = $this->compiler->compileTag('private_special_variable',
                                                      array(),
                                                      $this->yystack[ $this->yyidx +
                                                                      0 ]->minor[ 'smarty_internal_index' ]);
            $this->_retvalue = $smarty_var;
        } else {
            // used for array reset,next,prev,end,current
            $this->last_variable = $this->yystack[ $this->yyidx + 0 ]->minor[ 'var' ];
            $this->last_index = $this->yystack[ $this->yyidx + 0 ]->minor[ 'smarty_internal_index' ];
            $this->_retvalue = $this->compiler->compileVariable($this->yystack[ $this->yyidx + 0 ]->minor[ 'var' ]) .
                               $this->yystack[ $this->yyidx + 0 ]->minor[ 'smarty_internal_index' ];
        }
    }

    #line 848 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r106()
    {
        $this->_retvalue = '$_smarty_tpl->tpl_vars[' . $this->yystack[ $this->yyidx + -2 ]->minor . ']->' .
                           $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 852 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r108()
    {
        $this->_retvalue =
            $this->compiler->compileConfigVariable('\'' . $this->yystack[ $this->yyidx + -1 ]->minor . '\'');
    }

    #line 856 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r109()
    {
        $this->_retvalue = '(is_array($tmp = ' .
                           $this->compiler->compileConfigVariable('\'' . $this->yystack[ $this->yyidx + -2 ]->minor .
                                                                  '\'') . ') ? $tmp' .
                           $this->yystack[ $this->yyidx + 0 ]->minor . ' :null)';
    }

    #line 860 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r110()
    {
        $this->_retvalue = $this->compiler->compileConfigVariable($this->yystack[ $this->yyidx + -1 ]->minor);
    }

    #line 864 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r111()
    {
        $this->_retvalue =
            '(is_array($tmp = ' . $this->compiler->compileConfigVariable($this->yystack[ $this->yyidx + -2 ]->minor) .
            ') ? $tmp' . $this->yystack[ $this->yyidx + 0 ]->minor . ' : null)';
    }

    #line 867 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r112()
    {
        $this->_retvalue = array('var' => '\'' . substr($this->yystack[ $this->yyidx + -1 ]->minor, 1) . '\'',
                                 'smarty_internal_index' => $this->yystack[ $this->yyidx + 0 ]->minor);
    }

    #line 880 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r113()
    {
        $this->_retvalue = array('var'                   => $this->yystack[ $this->yyidx + -1 ]->minor,
                                 'smarty_internal_index' => $this->yystack[ $this->yyidx + 0 ]->minor);
    }

    #line 886 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r115()
    {
        return;
    }

    #line 889 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r116()
    {
        $this->_retvalue =
            '[' . $this->compiler->compileVariable('\'' . substr($this->yystack[ $this->yyidx + 0 ]->minor, 1) . '\'') .
            ']';
    }

    #line 893 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r117()
    {
        $this->_retvalue = '[' . $this->compiler->compileVariable($this->yystack[ $this->yyidx + 0 ]->minor) . ']';
    }

    #line 897 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r118()
    {
        $this->_retvalue = '[' . $this->compiler->compileVariable($this->yystack[ $this->yyidx + -2 ]->minor) . '->' .
                           $this->yystack[ $this->yyidx + 0 ]->minor . ']';
    }

    #line 901 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r119()
    {
        $this->_retvalue = '[\'' . $this->yystack[ $this->yyidx + 0 ]->minor . '\']';
    }

    #line 906 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r120()
    {
        $this->_retvalue = '[' . $this->yystack[ $this->yyidx + 0 ]->minor . ']';
    }

    #line 911 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r121()
    {
        $this->_retvalue = '[' . $this->yystack[ $this->yyidx + -1 ]->minor . ']';
    }

    #line 915 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r122()
    {
        $this->_retvalue = '[' . $this->compiler->compileTag('private_special_variable',
                                                             array(),
                                                             '[\'section\'][\'' .
                                                             $this->yystack[ $this->yyidx + -1 ]->minor .
                                                             '\'][\'index\']') . ']';
    }

    #line 918 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r123()
    {
        $this->_retvalue = '[' . $this->compiler->compileTag('private_special_variable',
                                                             array(),
                                                             '[\'section\'][\'' .
                                                             $this->yystack[ $this->yyidx + -3 ]->minor . '\'][\'' .
                                                             $this->yystack[ $this->yyidx + -1 ]->minor . '\']') . ']';
    }

    #line 924 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r124()
    {
        $this->_retvalue = '[' . $this->yystack[ $this->yyidx + -1 ]->minor . ']';
    }

    #line 940 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r126()
    {
        $this->_retvalue = '[' . $this->compiler->compileVariable('\'' .
                                                                  substr($this->yystack[ $this->yyidx + -1 ]->minor,
                                                                         1) . '\'') . ']';;
    }

    #line 950 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r130()
    {
        $this->_retvalue = '[]';
    }

    #line 954 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r131()
    {
        $this->_retvalue = '\'' . substr($this->yystack[ $this->yyidx + 0 ]->minor, 1) . '\'';
    }

    #line 959 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r132()
    {
        $this->_retvalue = '\'\'';
    }

    #line 967 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r133()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + -1 ]->minor . '.' . $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 973 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r135()
    {
        $var = trim(substr($this->yystack[ $this->yyidx + 0 ]->minor,
                           $this->compiler->getLdelLength(),
                           -$this->compiler->getRdelLength()),
                    ' $');
        $this->_retvalue = $this->compiler->compileVariable('\'' . $var . '\'');
    }

    #line 980 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r136()
    {
        $this->_retvalue = '(' . $this->yystack[ $this->yyidx + -1 ]->minor . ')';
    }

    #line 989 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r137()
    {
        if ($this->yystack[ $this->yyidx + -1 ]->minor[ 'var' ] === '\'smarty\'') {
            $this->_retvalue = $this->compiler->compileTag('private_special_variable',
                                                           array(),
                                                           $this->yystack[ $this->yyidx +
                                                                           -1 ]->minor[ 'smarty_internal_index' ]) .
                               $this->yystack[ $this->yyidx + 0 ]->minor;
        } else {
            $this->_retvalue = $this->compiler->compileVariable($this->yystack[ $this->yyidx + -1 ]->minor[ 'var' ]) .
                               $this->yystack[ $this->yyidx + -1 ]->minor[ 'smarty_internal_index' ] .
                               $this->yystack[ $this->yyidx + 0 ]->minor;
        }
    }

    #line 994 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r138()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 999 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r139()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + -1 ]->minor . $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 1006 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r140()
    {
        if ($this->security && substr($this->yystack[ $this->yyidx + -1 ]->minor, 0, 1) === '_') {
            $this->compiler->trigger_template_error(self::Err1);
        }
        $this->_retvalue =
            '->' . $this->yystack[ $this->yyidx + -1 ]->minor . $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 1013 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r141()
    {
        if ($this->security) {
            $this->compiler->trigger_template_error(self::Err2);
        }
        $this->_retvalue = '->{' . $this->compiler->compileVariable($this->yystack[ $this->yyidx + -1 ]->minor) .
                           $this->yystack[ $this->yyidx + 0 ]->minor . '}';
    }

    #line 1020 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r142()
    {
        if ($this->security) {
            $this->compiler->trigger_template_error(self::Err2);
        }
        $this->_retvalue =
            '->{' . $this->yystack[ $this->yyidx + -2 ]->minor . $this->yystack[ $this->yyidx + 0 ]->minor . '}';
    }

    #line 1028 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r143()
    {
        if ($this->security) {
            $this->compiler->trigger_template_error(self::Err2);
        }
        $this->_retvalue =
            '->{\'' . $this->yystack[ $this->yyidx + -4 ]->minor . '\'.' . $this->yystack[ $this->yyidx + -2 ]->minor .
            $this->yystack[ $this->yyidx + 0 ]->minor . '}';
    }

    #line 1036 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r144()
    {
        $this->_retvalue = '->' . $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 1044 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r145()
    {
        $this->_retvalue = $this->compiler->compilePHPFunctionCall($this->yystack[ $this->yyidx + -3 ]->minor,
                                                                   $this->yystack[ $this->yyidx + -1 ]->minor);
    }

    #line 1051 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r146()
    {
        if ($this->security && substr($this->yystack[ $this->yyidx + -3 ]->minor, 0, 1) === '_') {
            $this->compiler->trigger_template_error(self::Err1);
        }
        $this->_retvalue = $this->yystack[ $this->yyidx + -3 ]->minor . '(' .
                           implode(',', $this->yystack[ $this->yyidx + -1 ]->minor) . ')';
    }

    #line 1062 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r147()
    {
        if ($this->security) {
            $this->compiler->trigger_template_error(self::Err2);
        }
        $prefixVar = $this->compiler->getNewPrefixVariable();
        $this->compiler->appendPrefixCode("<?php {$prefixVar} = " . $this->compiler->compileVariable('\'' .
                                                                                                     substr($this->yystack[ $this->yyidx +
                                                                                                                            -3 ]->minor,
                                                                                                            1) . '\'') .
                                          ';?>');
        $this->_retvalue = $prefixVar . '(' . implode(',', $this->yystack[ $this->yyidx + -1 ]->minor) . ')';
    }

    #line 1079 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r148()
    {
        $this->_retvalue =
            array_merge($this->yystack[ $this->yyidx + -2 ]->minor, array($this->yystack[ $this->yyidx + 0 ]->minor));
    }

    #line 1083 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r151()
    {
        $this->_retvalue = array_merge($this->yystack[ $this->yyidx + -2 ]->minor,
                                       array(array_merge($this->yystack[ $this->yyidx + -1 ]->minor,
                                                         $this->yystack[ $this->yyidx + 0 ]->minor)));
    }

    #line 1091 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r152()
    {
        $this->_retvalue =
            array(array_merge($this->yystack[ $this->yyidx + -1 ]->minor, $this->yystack[ $this->yyidx + 0 ]->minor));
    }

    #line 1099 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r154()
    {
        $this->_retvalue = array($this->yystack[ $this->yyidx + 0 ]->minor);
    }

    #line 1118 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r155()
    {
        $this->_retvalue =
            array_merge($this->yystack[ $this->yyidx + -1 ]->minor, $this->yystack[ $this->yyidx + 0 ]->minor);
    }

    #line 1123 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r159()
    {
        $this->_retvalue = array($this->yystack[ $this->yyidx + 0 ]->minor, '', 'method');
    }

    #line 1128 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r160()
    {
        $this->_retvalue =
            array($this->yystack[ $this->yyidx + -1 ]->minor, $this->yystack[ $this->yyidx + 0 ]->minor, 'method');
    }

    #line 1133 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r161()
    {
        $this->_retvalue = array($this->yystack[ $this->yyidx + 0 ]->minor, '');
    }

    #line 1138 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r162()
    {
        $this->_retvalue =
            array($this->yystack[ $this->yyidx + -1 ]->minor, $this->yystack[ $this->yyidx + 0 ]->minor, 'property');
    }

    #line 1144 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r163()
    {
        $this->_retvalue = array($this->yystack[ $this->yyidx + -2 ]->minor,
                                 $this->yystack[ $this->yyidx + -1 ]->minor . $this->yystack[ $this->yyidx + 0 ]->minor,
                                 'property');
    }

    #line 1148 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r164()
    {
        $this->_retvalue = ' ' . trim($this->yystack[ $this->yyidx + 0 ]->minor) . ' ';
    }

    #line 1167 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r165()
    {
        static $lops = array(
            'eq'  => ' == ',
            'ne'  => ' != ',
            'neq' => ' != ',
            'gt'  => ' > ',
            'ge'  => ' >= ',
            'gte' => ' >= ',
            'lt'  => ' < ',
            'le'  => ' <= ',
            'lte' => ' <= ',
            'mod' => ' % ',
            'and' => ' && ',
            'or'  => ' || ',
            'xor' => ' xor ',
        );
        $op = strtolower(preg_replace('/\s*/', '', $this->yystack[ $this->yyidx + 0 ]->minor));
        $this->_retvalue = $lops[ $op ];
    }

    #line 1180 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r166()
    {
        static $tlops = array(
            'isdivby'     => array('op' => ' % ', 'pre' => '!('),
            'isnotdivby'  => array('op' => ' % ', 'pre' => '('),
            'isevenby'    => array('op' => ' / ', 'pre' => '!(1 & '),
            'isnotevenby' => array('op' => ' / ', 'pre' => '(1 & '),
            'isoddby'     => array('op' => ' / ', 'pre' => '(1 & '),
            'isnotoddby'  => array('op' => ' / ', 'pre' => '!(1 & '),
        );
        $op = strtolower(preg_replace('/\s*/', '', $this->yystack[ $this->yyidx + 0 ]->minor));
        $this->_retvalue = $tlops[ $op ];
    }

    #line 1194 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r167()
    {
        static $scond = array(
            'iseven'    => '!(1 & ',
            'isnoteven' => '(1 & ',
            'isodd'     => '(1 & ',
            'isnotodd'  => '!(1 & ',
        );
        $op = strtolower(str_replace(' ', '', $this->yystack[ $this->yyidx + 0 ]->minor));
        $this->_retvalue = $scond[ $op ];
    }

    #line 1202 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r168()
    {
        $this->_retvalue = 'array(' . $this->yystack[ $this->yyidx + -1 ]->minor . ')';
    }

    #line 1210 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r170()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + -2 ]->minor . ',' . $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 1214 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r172()
    {
        $this->_retvalue =
            $this->yystack[ $this->yyidx + -2 ]->minor . '=>' . $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 1230 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r173()
    {
        $this->_retvalue =
            '\'' . $this->yystack[ $this->yyidx + -2 ]->minor . '\'=>' . $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 1236 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r176()
    {
        $this->compiler->leaveDoubleQuote();
        $this->_retvalue = $this->yystack[ $this->yyidx + -1 ]->minor->to_smarty_php($this);
    }

    #line 1241 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r177()
    {
        $this->yystack[ $this->yyidx + -1 ]->minor->append_subtree($this, $this->yystack[ $this->yyidx + 0 ]->minor);
        $this->_retvalue = $this->yystack[ $this->yyidx + -1 ]->minor;
    }

    #line 1245 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r178()
    {
        $this->_retvalue = new Smarty_Internal_ParseTree_Dq($this, $this->yystack[ $this->yyidx + 0 ]->minor);
    }

    #line 1249 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r179()
    {
        $this->_retvalue = new Smarty_Internal_ParseTree_Code('(string)' . $this->yystack[ $this->yyidx + -1 ]->minor);
    }

    #line 1253 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r180()
    {
        $this->_retvalue =
            new Smarty_Internal_ParseTree_Code('(string)(' . $this->yystack[ $this->yyidx + -1 ]->minor . ')');
    }

    #line 1265 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r181()
    {
        $this->_retvalue = new Smarty_Internal_ParseTree_Code('(string)$_smarty_tpl->tpl_vars[\'' .
                                                              substr($this->yystack[ $this->yyidx + 0 ]->minor, 1) .
                                                              '\']->value');
    }

    #line 1269 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r184()
    {
        $this->_retvalue = new Smarty_Internal_ParseTree_Tag($this, $this->yystack[ $this->yyidx + 0 ]->minor);
    }

    function yy_r185()
    {
        $this->_retvalue = new Smarty_Internal_ParseTree_DqContent($this->yystack[ $this->yyidx + 0 ]->minor);
    }

    public function yy_reduce($yyruleno)
    {
        if ($this->yyTraceFILE && $yyruleno >= 0
            && $yyruleno < count(self::$yyRuleName)) {
            fprintf($this->yyTraceFILE,
                    "%sReduce (%d) [%s].\n",
                    $this->yyTracePrompt,
                    $yyruleno,
                    self::$yyRuleName[ $yyruleno ]);
        }
        $this->_retvalue = $yy_lefthand_side = null;
        if (isset(self::$yyReduceMap[ $yyruleno ])) {
            // call the action
            $this->_retvalue = null;
            $this->{'yy_r' . self::$yyReduceMap[ $yyruleno ]}();
            $yy_lefthand_side = $this->_retvalue;
        }
        $yygoto = self::$yyRuleInfo[ $yyruleno ][ 0 ];
        $yysize = self::$yyRuleInfo[ $yyruleno ][ 1 ];
        $this->yyidx -= $yysize;
        for ($i = $yysize; $i; $i--) {
            // pop all of the right-hand side parameters
            array_pop($this->yystack);
        }
        $yyact = $this->yy_find_reduce_action($this->yystack[ $this->yyidx ]->stateno, $yygoto);
        if ($yyact < self::YYNSTATE) {
            if (!$this->yyTraceFILE && $yysize) {
                $this->yyidx++;
                $x = new TP_yyStackEntry;
                $x->stateno = $yyact;
                $x->major = $yygoto;
                $x->minor = $yy_lefthand_side;
                $this->yystack[ $this->yyidx ] = $x;
            } else {
                $this->yy_shift($yyact, $yygoto, $yy_lefthand_side);
            }
        } else if ($yyact === self::YYNSTATE + self::YYNRULE + 1) {
            $this->yy_accept();
        }
    }

    public function yy_parse_failed()
    {
        if ($this->yyTraceFILE) {
            fprintf($this->yyTraceFILE, "%sFail!\n", $this->yyTracePrompt);
        }
        while ($this->yyidx >= 0) {
            $this->yy_pop_parser_stack();
        }
    }

    public function yy_syntax_error($yymajor, $TOKEN)
    {
        #line 214 "../smarty/lexer/smarty_internal_templateparser.y"
        $this->internalError = true;
        $this->yymajor = $yymajor;
        $this->compiler->trigger_template_error();
    }

    public function yy_accept()
    {
        if ($this->yyTraceFILE) {
            fprintf($this->yyTraceFILE, "%sAccept!\n", $this->yyTracePrompt);
        }
        while ($this->yyidx >= 0) {
            $this->yy_pop_parser_stack();
        }
        #line 207 "../smarty/lexer/smarty_internal_templateparser.y"
        $this->successful = !$this->internalError;
        $this->internalError = false;
        $this->retvalue = $this->_retvalue;
    }

    public function doParse($yymajor, $yytokenvalue)
    {
        $yyerrorhit = 0;   /* True if yymajor has invoked an error */
        if ($this->yyidx === null || $this->yyidx < 0) {
            $this->yyidx = 0;
            $this->yyerrcnt = -1;
            $x = new TP_yyStackEntry;
            $x->stateno = 0;
            $x->major = 0;
            $this->yystack = array();
            $this->yystack[] = $x;
        }
        $yyendofinput = ($yymajor == 0);
        if ($this->yyTraceFILE) {
            fprintf($this->yyTraceFILE,
                    "%sInput %s\n",
                    $this->yyTracePrompt,
                    $this->yyTokenName[ $yymajor ]);
        }
        do {
            $yyact = $this->yy_find_shift_action($yymajor);
            if ($yymajor < self::YYERRORSYMBOL &&
                !$this->yy_is_expected_token($yymajor)) {
                // force a syntax error
                $yyact = self::YY_ERROR_ACTION;
            }
            if ($yyact < self::YYNSTATE) {
                $this->yy_shift($yyact, $yymajor, $yytokenvalue);
                $this->yyerrcnt--;
                if ($yyendofinput && $this->yyidx >= 0) {
                    $yymajor = 0;
                } else {
                    $yymajor = self::YYNOCODE;
                }
            } else if ($yyact < self::YYNSTATE + self::YYNRULE) {
                $this->yy_reduce($yyact - self::YYNSTATE);
            } else if ($yyact === self::YY_ERROR_ACTION) {
                if ($this->yyTraceFILE) {
                    fprintf($this->yyTraceFILE,
                            "%sSyntax Error!\n",
                            $this->yyTracePrompt);
                }
                if (self::YYERRORSYMBOL) {
                    if ($this->yyerrcnt < 0) {
                        $this->yy_syntax_error($yymajor, $yytokenvalue);
                    }
                    $yymx = $this->yystack[ $this->yyidx ]->major;
                    if ($yymx === self::YYERRORSYMBOL || $yyerrorhit) {
                        if ($this->yyTraceFILE) {
                            fprintf($this->yyTraceFILE,
                                    "%sDiscard input token %s\n",
                                    $this->yyTracePrompt,
                                    $this->yyTokenName[ $yymajor ]);
                        }
                        $this->yy_destructor($yymajor, $yytokenvalue);
                        $yymajor = self::YYNOCODE;
                    } else {
                        while ($this->yyidx >= 0 &&
                               $yymx !== self::YYERRORSYMBOL &&
                               ($yyact = $this->yy_find_shift_action(self::YYERRORSYMBOL)) >= self::YYNSTATE
                        ) {
                            $this->yy_pop_parser_stack();
                        }
                        if ($this->yyidx < 0 || $yymajor == 0) {
                            $this->yy_destructor($yymajor, $yytokenvalue);
                            $this->yy_parse_failed();
                            $yymajor = self::YYNOCODE;
                        } else if ($yymx !== self::YYERRORSYMBOL) {
                            $u2 = 0;
                            $this->yy_shift($yyact, self::YYERRORSYMBOL, $u2);
                        }
                    }
                    $this->yyerrcnt = 3;
                    $yyerrorhit = 1;
                } else {
                    if ($this->yyerrcnt <= 0) {
                        $this->yy_syntax_error($yymajor, $yytokenvalue);
                    }
                    $this->yyerrcnt = 3;
                    $this->yy_destructor($yymajor, $yytokenvalue);
                    if ($yyendofinput) {
                        $this->yy_parse_failed();
                    }
                    $yymajor = self::YYNOCODE;
                }
            } else {
                $this->yy_accept();
                $yymajor = self::YYNOCODE;
            }
        } while ($yymajor !== self::YYNOCODE && $this->yyidx >= 0);
    }
}

